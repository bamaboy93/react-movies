{"version":3,"file":"static/js/720.b6cefcaf.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","services/api/movies-api.js","services/getColor.js","services/localStorage.js","components/PopUp/PopUp.styled.jsx","components/PopUp/PopUp.jsx","components/Trailer/Trailer.styled.jsx","components/Trailer/Trailer.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/VideoError/VideoError.jsx","components/Buttons/Buttons.styled.jsx","components/Buttons/Buttons.jsx","components/SingleMovie/Overview/Overview.styled.jsx","components/SingleMovie/Overview/Overview.jsx","components/Buttons/ButtonPlay.styled.jsx","components/Buttons/ButtonPlay.jsx","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","components/ImagesSwiper/ImagesSwiper.styled.jsx","components/ImagesSwiper/ImagesSwiper.jsx","components/SingleMovie/MovieInfo/MovieInfo.styled.jsx","components/SingleMovie/MovieInfo/MovieInfo.jsx","components/SingleMovie/Navigation/Navigation.jsx","components/SingleMovie/SingleMovie.styled.jsx","components/SingleMovie/Details/Details.styled.jsx","components/SingleMovie/Details/Details.jsx","components/SingleMovie/SingleMovie.jsx","components/CastMobile/CastMobile.styled.jsx","components/CastMobile/CastMobile.jsx","components/SingleMovieMobile/SingleMovieMobile.styled.jsx","components/SingleMovieMobile/SingleMovieMobile.jsx","views/MovieView/MovieView.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const MainContainer = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 0px 15px;\r\n\r\n  @media (min-width: 375px) {\r\n    width: 375px;\r\n    padding: 0px 15px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 768px;\r\n    padding: 0px 30px;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    width: 1280px;\r\n    padding: 0px 15px;\r\n  }\r\n`;\r\n","import { MainContainer } from \"./Container.styled\";\r\n\r\nexport default function Container({ children }) {\r\n  return <MainContainer>{children}</MainContainer>;\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"a7722589dc29fac056c18bf39b029797\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: \"en-US\",\r\n  include_image_language: \"en,null\",\r\n};\r\n\r\n////////////////////////Popular\r\nasync function getPopularMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/popular`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return;\r\n  }\r\n}\r\n\r\n//////////////////// Top_Rated\r\nasync function getTopRatedMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/top_rated`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////// Upcoming\r\nasync function getUpcomingMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/upcoming`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n///////////////////////// SearchQuery\r\nasync function getMoviesByQuery(query, page) {\r\n  try {\r\n    const config = {\r\n      url: `search/movie`,\r\n      params: {\r\n        page,\r\n        query,\r\n      },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////// Single Movie\r\nasync function getMovieById(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n//////////////////////////// Cast\r\nasync function getCastInfo(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/credits`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.cast;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////////////// Trailers\r\nasync function getMovieVideo(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/videos`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n//////////////////////////// Images\r\nasync function getMovieImages(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/images`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.backdrops;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n\r\nexport {\r\n  getPopularMovies,\r\n  getUpcomingMovies,\r\n  getTopRatedMovies,\r\n  getMoviesByQuery,\r\n  getMovieById,\r\n  getCastInfo,\r\n  getMovieImages,\r\n  getMovieVideo,\r\n};\r\n","export default function getColor(vote) {\r\n  const num = vote.toFixed();\r\n  if (num >= 8) {\r\n    return \"#7dd87d\";\r\n  } else if (num < 8 && num >= 5) {\r\n    return \"#eec60a\";\r\n  } else {\r\n    return \"#eb2632\";\r\n  }\r\n}\r\n","const NAME = \"favourites\";\r\n\r\nexport const getFavourites = () => {\r\n  return JSON.parse(localStorage.getItem(NAME) || \"[]\");\r\n};\r\n\r\nexport const addFavourite = (film) => {\r\n  const fav = getFavourites();\r\n  fav.unshift(film);\r\n  localStorage.setItem(NAME, JSON.stringify(fav));\r\n};\r\n\r\nexport const deleteFavourite = (id) => {\r\n  const fav = getFavourites().filter((i) => i.id !== id);\r\n  localStorage.setItem(NAME, JSON.stringify(fav));\r\n};\r\n\r\nexport const inFavourites = (id) => {\r\n  return !!getFavourites().find((i) => i.id === id);\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 1;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  z-index: 999;\r\n`;\r\n\r\nexport const Modal = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { Modal, Overlay } from \"./PopUp.styled\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\nconst PopUp = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <Overlay onClick={handleBackdropClick}>\r\n      <Modal>{children}</Modal>\r\n    </Overlay>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nPopUp.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PopUp;\r\n","import styled from \"@emotion/styled\";\r\n\r\nimport ReactPlayer from \"react-player\";\r\n\r\nexport const StyledPlayer = styled(ReactPlayer)`\r\n  width: 310px;\r\n  height: 240px;\r\n  @media (min-width: 768px) and (max-width: 1279px) {\r\n    width: 760px;\r\n    height: 576px;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    width: 960px;\r\n    height: 540px;\r\n  }\r\n`;\r\n\r\nexport const Video = styled.iframe`\r\n  width: 310px;\r\n  height: 240px;\r\n  @media (min-width: 768px) and (max-width: 1279px) {\r\n    width: 760px;\r\n    height: 576px;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    width: 960px;\r\n    height: 540px;\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport { Video } from \"./Trailer.styled\";\r\n\r\nexport default function Trailer({ videos }) {\r\n  const [trailer, setTrailer] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const trailers = videos.filter((video) => video.type === \"Trailer\");\r\n    setTrailer(trailers[0]);\r\n  }, [videos]);\r\n\r\n  return (\r\n    <>\r\n      {trailer && (\r\n        <Video\r\n          src={`https://www.youtube.com/embed/${trailer.key}`}\r\n          title=\"YouTube video player\"\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MainWrapper = styled.div`\r\n  position: relative;\r\n  width: 100vw;\r\n  height: 100vh;\r\n`;\r\n\r\nexport const LoaderWrapper = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  margin-left: -50px;\r\n  margin-top: -50px;\r\n`;\r\n","import { Puff } from \"react-loader-spinner\";\r\n\r\nimport { LoaderWrapper, MainWrapper } from \"./Loader.styled\";\r\n\r\nfunction Spinner() {\r\n  return (\r\n    <MainWrapper>\r\n      <LoaderWrapper>\r\n        <Puff color=\"red\" height={100} width={100} />\r\n      </LoaderWrapper>\r\n    </MainWrapper>\r\n  );\r\n}\r\n\r\nexport default Spinner;\r\n","import errorImage from \"../../styles/images/YouTube.jpg\";\r\n\r\nexport default function VideoError() {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={errorImage}\r\n        alt=\"nothing-found\"\r\n        style={{ height: \"100%\", width: \"100%\" }}\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Box = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: ${(props) => props.theme.space[5]}px;\r\n  }\r\n`;\r\n\r\nexport const ButtonTrailer = styled.button`\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  padding: 10px 20px;\r\n  border: none;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background-color: ${(props) => props.theme.colors.red};\r\n  border-radius: 5%;\r\n  display: flex;\r\n  align-items: center;\r\n  transition: filter 250ms;\r\n  color: ${(props) => props.theme.colors.white};\r\n  margin-right: ${(props) => props.theme.space[3]}px;\r\n  &:hover {\r\n    filter: brightness(1.2);\r\n  }\r\n`;\r\n\r\nexport const ButtonFav = styled.button`\r\n  height: 38px;\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n  background-color: rgba(49, 50, 60, 0.55);\r\n  border-radius: 5%;\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${(props) => props.theme.colors.red};\r\n  transition: filter 300ms;\r\n\r\n  &:hover {\r\n    filter: brightness(1.2);\r\n  }\r\n`;\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { MdFavoriteBorder, MdFavorite } from \"react-icons/md\";\r\nimport {\r\n  addFavourite,\r\n  deleteFavourite,\r\n  inFavourites,\r\n} from \"../../services/localStorage\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { auth } from \"../../services/firebase\";\r\nimport { Box, ButtonTrailer, ButtonFav } from \"./Buttons.styled\";\r\n\r\nexport default function Buttons({ movie, onToggle }) {\r\n  const { id } = movie;\r\n  const [fav, setFav] = useState(false);\r\n  const user = useAuthState(auth);\r\n\r\n  const onFavourite = () => {\r\n    if (fav) {\r\n      deleteFavourite(id);\r\n    } else {\r\n      addFavourite(movie);\r\n    }\r\n    setFav(!fav);\r\n  };\r\n  useEffect(() => {\r\n    setFav(inFavourites(id));\r\n  }, [id]);\r\n  return (\r\n    <Box>\r\n      <ButtonTrailer type=\"button\" onClick={onToggle}>\r\n        Trailer\r\n      </ButtonTrailer>\r\n      <ButtonFav\r\n        title=\"You need to be logged in\"\r\n        type=\"button\"\r\n        onClick={onFavourite}\r\n        disabled={user ? false : true}\r\n      >\r\n        {fav ? <MdFavorite size={30} /> : <MdFavoriteBorder size={30} />}\r\n      </ButtonFav>\r\n    </Box>\r\n  );\r\n}\r\n\r\nButtons.propTypes = {\r\n  movie: PropTypes.object.isRequired,\r\n  onToggle: PropTypes.func.isRequired,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const OverviewWrapper = styled.div``;\r\n\r\nexport const ShortDesc = styled.p`\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  line-height: ${(props) => props.theme.lineHeights.heading};\r\n  margin-bottom: ${(props) => props.theme.space[5]}px;\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport Buttons from \"../../Buttons\";\r\n\r\nimport { OverviewWrapper, ShortDesc } from \"./Overview.styled\";\r\n\r\nexport default function Overview({ movie, onToggle }) {\r\n  const { tagline } = movie;\r\n\r\n  return (\r\n    <OverviewWrapper>\r\n      {tagline && <ShortDesc>{tagline}</ShortDesc>}\r\n      <Buttons movie={movie} onToggle={onToggle} />\r\n    </OverviewWrapper>\r\n  );\r\n}\r\n\r\nOverview.propTypes = {\r\n  movie: PropTypes.shape({\r\n    tagline: PropTypes.string,\r\n  }),\r\n  onToggle: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  position: absolute;\r\n  z-index: 44;\r\n  top: 30%;\r\n  right: 15%;\r\n\r\n  border: none;\r\n  outline: transparent;\r\n  background-color: transparent;\r\n  color: ${(props) => props.theme.colors.white};\r\n  opacity: 0.7;\r\n  cursor: pointer;\r\n\r\n  @media (max-width: 1279px) {\r\n    right: 5%;\r\n  }\r\n\r\n  &:hover {\r\n    opacity: 1;\r\n\r\n    svg {\r\n      scale: 1.4;\r\n    }\r\n  }\r\n\r\n  svg {\r\n    width: 150px;\r\n    height: 150px;\r\n    fill: currentColor;\r\n    transition: scale 250ms ease;\r\n    @media (max-width: 1279px) {\r\n      width: 100px;\r\n      height: 100px;\r\n    }\r\n  }\r\n`;\r\n","import { BsPlayCircle } from \"react-icons/bs\";\r\nimport { Button } from \"./ButtonPlay.styled\";\r\n\r\nexport default function ButtonPlay({ onToggle }) {\r\n  return (\r\n    <Button type=\"button\" onClick={onToggle}>\r\n      <BsPlayCircle />\r\n    </Button>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const CastList = styled.ul`\r\n  margin-top: ${(props) => props.theme.space[9]}px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\r\n  gap: 15px;\r\n  @media (min-width: 768px) and (max-width: 1279px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));\r\n    gap: 10px;\r\n  }\r\n`;\r\n\r\nexport const CastListItem = styled.li`\r\n  position: relative;\r\n  text-align: center;\r\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\r\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset; ;\r\n`;\r\n\r\nexport const CastInfo = styled.div`\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: 100%;\r\n  min-height: 70px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: rgba(49, 50, 60, 0.647);\r\n`;\r\n\r\nexport const CastName = styled.p`\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport Container from \"../../components/Container\";\r\nimport noImageFound from \"../../styles/images/noimage.jpg\";\r\nimport { CastInfo, CastList, CastListItem, CastName } from \"./Cast.styled\";\r\n\r\nexport default function Cast({ cast }) {\r\n  return (\r\n    <Container>\r\n      {cast && (\r\n        <CastList>\r\n          {cast.slice(0, 10).map(({ id, name, profile_path }) => (\r\n            <CastListItem key={id}>\r\n              {profile_path ? (\r\n                <img\r\n                  src={`https://image.tmdb.org/t/p/w300${profile_path}`}\r\n                  alt=\"actor\"\r\n                />\r\n              ) : (\r\n                <img src={`${noImageFound}`} alt={name} />\r\n              )}\r\n\r\n              <CastInfo>{name && <CastName>{name}</CastName>}</CastInfo>\r\n            </CastListItem>\r\n          ))}\r\n        </CastList>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nCast.propTypes = {\r\n  cast: PropTypes.arrayOf(PropTypes.shape),\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ImageSwiper = styled.div`\r\n  margin-top: ${(props) => props.theme.space[7]}px;\r\n  width: 100%;\r\n  @media (min-width: 768px) {\r\n    margin-bottom: ${(props) => props.theme.space[7]}px;\r\n  }\r\n`;\r\n","import { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Pagination, EffectFade } from \"swiper\";\r\nimport noImageFound from \"../../styles/images/no-image.jpg\";\r\nimport { ImageSwiper } from \"./ImagesSwiper.styled\";\r\nimport Container from \"../Container\";\r\n\r\nimport \"swiper/scss\";\r\nimport \"swiper/scss/effect-fade\";\r\nimport \"swiper/scss/pagination\";\r\n\r\nexport default function ImagesSwiper({ images }) {\r\n  return (\r\n    <>\r\n      {images.length > 0 && (\r\n        <Container>\r\n          <ImageSwiper>\r\n            <Swiper\r\n              effect={\"fade\"}\r\n              spaceBetween={30}\r\n              pagination={{\r\n                clickable: true,\r\n              }}\r\n              modules={[Pagination, EffectFade]}\r\n            >\r\n              {images.slice(0, 8).map(({ file_path }) => (\r\n                <SwiperSlide key={file_path}>\r\n                  <img\r\n                    src={\r\n                      file_path\r\n                        ? `https://image.tmdb.org/t/p/original${file_path}`\r\n                        : `${noImageFound}`\r\n                    }\r\n                    alt=\"movie backdrop\"\r\n                  />\r\n                </SwiperSlide>\r\n              ))}\r\n            </Swiper>\r\n          </ImageSwiper>\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport getColor from \"../../../services/getColor\";\r\n\r\nexport const Options = styled.div`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  margin-bottom: ${(props) => props.theme.space[5]}px;\r\n  background-color: rgba(49, 50, 60, 0.55);\r\n  padding: 12px;\r\n  border-radius: 5px;\r\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px,\r\n    rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\r\n`;\r\n\r\nexport const Year = styled.p`\r\n  margin-right: ${(props) => props.theme.space[4]}px;\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  color: ${(props) => props.theme.colors.white};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nexport const Genre = styled.p`\r\n  margin-right: ${(props) => props.theme.space[4]}px;\r\n  ont-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n  color: ${(props) => props.theme.colors.peach};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nexport const Runtime = styled.p`\r\n  color: ${(props) => props.theme.colors.addText};\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n  color: ${(props) => props.theme.colors.lightviolet};\r\n  border: 2px solid ${(props) => props.theme.colors.lightviolet};\r\n  padding: 4px;\r\n  border-radius: 5px;\r\n  margin-right: ${(props) => props.theme.space[4]}px;\r\n`;\r\n\r\nexport const Rating = styled.p`\r\n  display: flex;\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  color: ${(props) => getColor(props.vote)};\r\n`;\r\nexport const RatingFull = styled.span`\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  align-items: flex-start;\r\n  margin-left: ${(props) => props.theme.space[1]}px;\r\n  color: ${(props) => props.theme.colors.white};\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport {\r\n  Genre,\r\n  Options,\r\n  Rating,\r\n  RatingFull,\r\n  Runtime,\r\n  Year,\r\n} from \"./MovieInfo.styled\";\r\n\r\nexport default function MovieInfo({ movie }) {\r\n  const { release_date, genres, runtime, vote_average } = movie;\r\n  return (\r\n    <Options>\r\n      <Year>{release_date.split(\"\").slice(0, 4).join(\"\")}</Year>\r\n      {genres.slice(0, 1).map((genre) => (\r\n        <Genre key={genre.id}>{genre.name}</Genre>\r\n      ))}\r\n      <Runtime>{runtime}min</Runtime>\r\n      <Rating vote={vote_average}>\r\n        {vote_average.toFixed(1)}\r\n        <RatingFull>/10</RatingFull>\r\n      </Rating>\r\n    </Options>\r\n  );\r\n}\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.shape({\r\n    genres: PropTypes.arrayOf(PropTypes.shape),\r\n    year: PropTypes.string,\r\n    release_date: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n  }),\r\n};\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Breadcrumbs from \"@mui/material/Breadcrumbs\";\r\nimport Link from \"@mui/material/Link\";\r\nimport HomeIcon from \"@mui/icons-material/Home\";\r\nimport MovieIcon from \"@mui/icons-material/Movie\";\r\n\r\nexport default function Navigation({ title }) {\r\n  const navigate = useNavigate();\r\n\r\n  return (\r\n    <Breadcrumbs sx={{ color: \"white\" }} aria-label=\"breadcrumb\">\r\n      <Link\r\n        underline=\"hover\"\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          cursor: \"pointer\",\r\n          fontSize: 16,\r\n        }}\r\n        color=\"white\"\r\n        onClick={() => navigate(-1)}\r\n      >\r\n        <HomeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n        Back\r\n      </Link>\r\n\r\n      <Typography\r\n        sx={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          fontSize: 16,\r\n          fontWeight: \"bold\",\r\n        }}\r\n        color=\"white\"\r\n      >\r\n        <MovieIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />\r\n        {title}\r\n      </Typography>\r\n    </Breadcrumbs>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MovieScreen = styled.div`\r\n  position: relative;\r\n  min-height: 100svh;\r\n\r\n  background-image: ${(props) =>\r\n    `url(https://image.tmdb.org/t/p/original${props.backdrop})`};\r\n  background-repeat: no-repeat !important;\r\n  background-size: cover !important;\r\n\r\n  z-index: 1;\r\n\r\n  @media (min-width: 1280px) {\r\n    background-position: center !important;\r\n  }\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    top: 0;\r\n    position: absolute;\r\n    background: rgba(0, 0, 0, 0.2);\r\n    z-index: -1;\r\n  }\r\n`;\r\n\r\nexport const NavigationWrapper = styled.div`\r\n  position: absolute;\r\n  top: 10%;\r\n  left: 50%;\r\n  transform: translate(-50%, -10%);\r\n`;\r\n\r\nexport const MovieWrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  margin-bottom: ${(props) => props.theme.space[7]}px;\r\n  max-width: 750px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.xl};\r\n  line-height: ${(props) => props.theme.lineHeights.heading};\r\n\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n  @media (min-width: 768px) and (max-width: 1279px) {\r\n    font-size: ${(props) => props.theme.fontSizes.l};\r\n  }\r\n`;\r\n","import styled from \"@emotion/styled\";\r\nimport getColor from \"../../../services/getColor\";\r\n\r\nexport const DetailsButton = styled.button`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  margin-top: ${(props) => props.theme.space[7]}px;\r\n  padding: 10px 15px;\r\n  border: none;\r\n  outline: none;\r\n  border-radius: 5%;\r\n  color: ${(props) => props.theme.colors.white};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.xs};\r\n  text-transform: uppercase;\r\n  background-color: ${(props) => props.theme.colors.red};\r\n  transition: ${(props) => props.theme.animation.main};\r\n\r\n  &:hover {\r\n    letter-spacing: 2px;\r\n    border-left: 3px solid ${(props) => props.theme.colors.hover};\r\n    background-color: transparent;\r\n    color: ${(props) => props.theme.colors.hover};\r\n  }\r\n\r\n  svg {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: ${(props) => props.theme.space[1]}px;\r\n    fill: currentColor;\r\n  }\r\n`;\r\n\r\nexport const DetailsWrapper = styled.div`\r\n  padding: ${(props) => props.theme.space[9]}px;\r\n`;\r\n\r\nexport const MovieWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: ${(props) => props.theme.space[6]}px;\r\n`;\r\n\r\nexport const PosterWrapper = styled.div`\r\n  position: relative;\r\n  margin-right: ${(props) => props.theme.space[9]}px;\r\n  box-shadow: rgba(9, 30, 66, 0.25) 0px 4px 8px -2px,\r\n    rgba(9, 30, 66, 0.08) 0px 0px 0px 1px;\r\n`;\r\n\r\nexport const Poster = styled.img`\r\n  width: 400px;\r\n  border-radius: 4px;\r\n  object-fit: contain;\r\n`;\r\n\r\nexport const Rating = styled.p`\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 10px;\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  color: ${(props) => getColor(props.vote)};\r\n`;\r\n\r\nexport const InfoWrapper = styled.div``;\r\n\r\nexport const Title = styled.h2`\r\n  margin-bottom: ${(props) => props.theme.space[4]}px;\r\n  text-align: left;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  color: ${(props) => props.theme.colors.white};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Year = styled.p`\r\n  margin-bottom: ${(props) => props.theme.space[2]}px;\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n  color: ${(props) => props.theme.colors.red};\r\n`;\r\n\r\nexport const Subtitle = styled.h3`\r\n  margin-bottom: ${(props) => props.theme.space[1]}px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  color: ${(props) => props.theme.colors.white};\r\n`;\r\n\r\nexport const Genres = styled.ul`\r\n  margin-bottom: ${(props) => props.theme.space[3]}px;\r\n`;\r\n\r\nexport const Genre = styled.li`\r\n  display: inline-block;\r\n  color: ${(props) => props.theme.colors.red};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n  :not(:last-child)::after {\r\n  content: \",\";\r\n  margin-right: ${(props) => props.theme.space[1]}px;\r\n`;\r\n\r\nexport const Runtime = styled.p`\r\n  display: inline-block;\r\n  margin-bottom: ${(props) => props.theme.space[3]}px;\r\n  color: ${(props) => props.theme.colors.red};\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n\r\n  border: 1px solid ${(props) => props.theme.colors.red};\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  margin-right: ${(props) => props.theme.space[4]}px;\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n  width: 550px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  color: ${(props) => props.theme.colors.white};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nexport const CastList = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const CastListItem = styled.li`\r\n  display: inline-block;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  color: ${(props) => props.theme.colors.red};\r\n  &:not(:last-child)::after {\r\n    content: \",\";\r\n    margin-right: ${(props) => props.theme.space[1]}px;\r\n  }\r\n`;\r\n\r\nexport const CastError = styled.p`\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\nimport { Box, Drawer } from \"@mui/material\";\r\nimport { BsFillPlayFill } from \"react-icons/bs\";\r\nimport {\r\n  DetailsButton,\r\n  DetailsWrapper,\r\n  MovieWrapper,\r\n  PosterWrapper,\r\n  Poster,\r\n  Rating,\r\n  InfoWrapper,\r\n  Title,\r\n  Runtime,\r\n  Year,\r\n  Subtitle,\r\n  Genres,\r\n  Genre,\r\n  Overview,\r\n  CastList,\r\n  CastListItem,\r\n  CastError,\r\n} from \"./Details.styled\";\r\n\r\nexport default function Details({ cast, movie }) {\r\n  const {\r\n    overview,\r\n    original_title,\r\n    release_date,\r\n    runtime,\r\n    vote_average,\r\n    poster_path,\r\n  } = movie;\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const toggleDrawer = () => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DetailsButton onClick={toggleDrawer()}>\r\n        <BsFillPlayFill /> Details\r\n      </DetailsButton>\r\n      <Drawer anchor={\"right\"} open={open} onClose={toggleDrawer()}>\r\n        <Box\r\n          sx={{ width: 750 }}\r\n          onClick={toggleDrawer()}\r\n          onKeyDown={toggleDrawer()}\r\n        >\r\n          <DetailsWrapper>\r\n            <MovieWrapper>\r\n              <PosterWrapper>\r\n                <Poster\r\n                  src={`https://image.tmdb.org/t/p/original${poster_path}`}\r\n                  alt={original_title}\r\n                />\r\n                <Rating vote={vote_average}>{vote_average.toFixed()}</Rating>\r\n              </PosterWrapper>\r\n              <InfoWrapper>\r\n                <Title>{original_title}</Title>\r\n                <Year>{release_date.split(\"\").slice(0, 4).join(\"\")}</Year>\r\n                <Subtitle>Genres:</Subtitle>\r\n                <Genres>\r\n                  {movie.genres.slice(0, 2).map((genre) => (\r\n                    <Genre key={genre.id}>{genre.name}</Genre>\r\n                  ))}\r\n                </Genres>\r\n                <Subtitle>Runtime:</Subtitle>\r\n                <Runtime>{runtime}min</Runtime>\r\n                <Subtitle>Cast:</Subtitle>\r\n                {cast ? (\r\n                  <CastList>\r\n                    {cast.slice(0, 4).map((actor) => (\r\n                      <CastListItem key={actor.id}>\r\n                        {actor.original_name}\r\n                      </CastListItem>\r\n                    ))}\r\n                  </CastList>\r\n                ) : (\r\n                  <CastError>...</CastError>\r\n                )}\r\n              </InfoWrapper>\r\n            </MovieWrapper>\r\n            <Overview>{overview}</Overview>\r\n          </DetailsWrapper>\r\n        </Box>\r\n      </Drawer>\r\n    </>\r\n  );\r\n}\r\n\r\nDetails.propTypes = {\r\n  movie: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    poster_path: PropTypes.string,\r\n    original_title: PropTypes.string,\r\n    release_date: PropTypes.string,\r\n    runtime: PropTypes.number,\r\n    vote_average: PropTypes.number,\r\n    overview: PropTypes.string,\r\n  }),\r\n  cast: PropTypes.arrayOf(PropTypes.shape),\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport Overview from \"./Overview/Overview\";\r\nimport ButtonPlay from \"../Buttons/ButtonPlay\";\r\nimport Cast from \"../Cast\";\r\nimport ImagesSwiper from \"../ImagesSwiper\";\r\nimport Container from \"../Container\";\r\nimport MovieInfo from \"./MovieInfo\";\r\nimport Navigation from \"./Navigation/Navigation\";\r\n\r\nimport {\r\n  MovieScreen,\r\n  NavigationWrapper,\r\n  MovieWrapper,\r\n  Title,\r\n} from \"./SingleMovie.styled\";\r\nimport Details from \"./Details/Details\";\r\n\r\nexport default function SingleMovie({ movie, onToggle, cast, images }) {\r\n  const { backdrop_path, original_title } = movie;\r\n\r\n  return (\r\n    <>\r\n      {movie && (\r\n        <MovieScreen backdrop={backdrop_path}>\r\n          <NavigationWrapper>\r\n            <Navigation title={original_title} />\r\n          </NavigationWrapper>\r\n          <MovieWrapper>\r\n            <Container>\r\n              <Title>{original_title}</Title>\r\n              <MovieInfo movie={movie} />\r\n              <Overview movie={movie} onToggle={onToggle} />\r\n\r\n              <ButtonPlay onToggle={onToggle} />\r\n              <Details movie={movie} cast={cast} />\r\n            </Container>\r\n          </MovieWrapper>\r\n        </MovieScreen>\r\n      )}\r\n      <Cast cast={cast} />\r\n      <ImagesSwiper images={images} />\r\n    </>\r\n  );\r\n}\r\n\r\nSingleMovie.propTypes = {\r\n  movie: PropTypes.shape({\r\n    backdrop: PropTypes.string,\r\n    title: PropTypes.string,\r\n  }),\r\n  cast: PropTypes.arrayOf(PropTypes.shape),\r\n  onToggle: PropTypes.func,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport { styled as muiStyled } from \"@mui/material/styles\";\r\n\r\nexport const Item = muiStyled(Paper)(({ theme }) => ({\r\n  backgroundColor: \"#191919\",\r\n  padding: theme.spacing(1),\r\n  textAlign: \"center\",\r\n  color: theme.colors.white,\r\n}));\r\n\r\nexport const DropdownTitle = styled.p`\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  color: ${(props) => props.theme.colors.black};\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n  height: 120px;\r\n`;\r\n\r\nexport const ActorName = styled.p`\r\n  padding: ${(props) => props.theme.space[1]}px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.xxs};\r\n`;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport Accordion from \"@mui/material/Accordion\";\r\nimport AccordionSummary from \"@mui/material/AccordionSummary\";\r\nimport AccordionDetails from \"@mui/material/AccordionDetails\";\r\n\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nimport Container from \"../../components/Container\";\r\nimport noImageFound from \"../../styles/images/noimage.jpg\";\r\nimport { ActorName, DropdownTitle, Image, Item } from \"./CastMobile.styled\";\r\n\r\nexport default function CastMobile({ cast }) {\r\n  return (\r\n    <Container>\r\n      <Accordion sx={{ backgroundColor: \"#f5f4f4\" }}>\r\n        <AccordionSummary\r\n          expandIcon={<ExpandMoreIcon />}\r\n          aria-controls=\"panel1a-content\"\r\n          id=\"panel1a-header\"\r\n        >\r\n          <DropdownTitle>Cast</DropdownTitle>\r\n        </AccordionSummary>\r\n        <AccordionDetails>\r\n          {cast && (\r\n            <Grid container spacing={1}>\r\n              {cast.slice(0, 6).map(({ id, name, profile_path }) => (\r\n                <Grid item xs={4} key={id}>\r\n                  <Item sx={{ height: 1 }}>\r\n                    {profile_path ? (\r\n                      <Image\r\n                        src={`https://image.tmdb.org/t/p/w300${profile_path}`}\r\n                        alt={name}\r\n                      />\r\n                    ) : (\r\n                      <Image src={`${noImageFound}`} alt={name} />\r\n                    )}\r\n\r\n                    <ActorName>{name}</ActorName>\r\n                  </Item>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          )}\r\n        </AccordionDetails>\r\n      </Accordion>\r\n    </Container>\r\n  );\r\n}\r\n\r\nCastMobile.propTypes = {\r\n  cast: PropTypes.arrayOf(PropTypes.shape),\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport getColor from \"../../services/getColor\";\r\n\r\nexport const PageWrapper = styled.div`\r\n  padding-bottom: ${(props) => props.theme.space[8]}px;\r\n`;\r\n\r\nexport const MovieWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: ${(props) => props.theme.space[5]}px;\r\n`;\r\n\r\nexport const NavigationWrapper = styled.div`\r\n  margin-top: 80px;\r\n  margin-bottom: ${(props) => props.theme.space[5]}px;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const PosterWrapper = styled.div`\r\n  position: relative;\r\n  margin-right: ${(props) => props.theme.space[4]}px;\r\n`;\r\n\r\nexport const Poster = styled.img`\r\n  min-width: 180px;\r\n  border-radius: 4px;\r\n  object-fit: contain;\r\n`;\r\n\r\nexport const Rating = styled.p`\r\n  position: absolute;\r\n  right: 15px;\r\n  top: 10px;\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n  color: ${(props) => getColor(props.vote)};\r\n`;\r\n\r\nexport const InfoWrapper = styled.div``;\r\n\r\nexport const Title = styled.h2`\r\n  margin-bottom: ${(props) => props.theme.space[5]}px;\r\n  text-align: left;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  line-height: ${(props) => props.theme.lineHeights.heading};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Year = styled.p`\r\n  margin-top: ${(props) => props.theme.space[6]}px;\r\n  margin-bottom: ${(props) => props.theme.space[2]}px;\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n  color: ${(props) => props.theme.colors.red};\r\n`;\r\n\r\nexport const Subtitle = styled.h3`\r\n  margin-bottom: 5px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n`;\r\n\r\nexport const Genres = styled.ul`\r\n  margin-bottom: ${(props) => props.theme.space[3]}px;\r\n`;\r\n\r\nexport const Genre = styled.li`\r\n  display: inline-block;\r\n  color: ${(props) => props.theme.colors.red};\r\n \r\n  :not(:last-child)::after {\r\n  content: \",\";\r\n  margin-right: ${(props) => props.theme.space[1]}px;\r\n`;\r\n\r\nexport const Runtime = styled.p`\r\n  display: inline-block;\r\n  color: ${(props) => props.theme.colors.red};\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n\r\n  border: 1px solid ${(props) => props.theme.colors.red};\r\n  padding: ${(props) => props.theme.space[1]}px;\r\n  border-radius: 5px;\r\n  margin-right: ${(props) => props.theme.space[4]}px;\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n  margin-bottom: ${(props) => props.theme.space[5]}px;\r\n  text-align: left;\r\n\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport Navigation from \"../SingleMovie/Navigation/Navigation\";\r\nimport Buttons from \"../Buttons\";\r\nimport CastMobile from \"../CastMobile\";\r\nimport Container from \"../Container\";\r\nimport ImagesSwiper from \"../ImagesSwiper\";\r\nimport {\r\n  NavigationWrapper,\r\n  InfoWrapper,\r\n  MovieWrapper,\r\n  Poster,\r\n  Title,\r\n  Rating,\r\n  Year,\r\n  Genres,\r\n  Genre,\r\n  Overview,\r\n  PosterWrapper,\r\n  Subtitle,\r\n  Runtime,\r\n  PageWrapper,\r\n} from \"./SingleMovieMobile.styled\";\r\n\r\nexport default function SingleMovieMobile({ movie, cast, images, onToggle }) {\r\n  const {\r\n    release_date,\r\n    poster_path,\r\n    title,\r\n    genres,\r\n    vote_average,\r\n    overview,\r\n    runtime,\r\n  } = movie;\r\n  return (\r\n    <>\r\n      {movie && (\r\n        <PageWrapper>\r\n          <Container>\r\n            <NavigationWrapper>\r\n              <Navigation title={title} />\r\n            </NavigationWrapper>\r\n            <MovieWrapper>\r\n              <PosterWrapper>\r\n                <Poster\r\n                  src={`https://image.tmdb.org/t/p/original${poster_path}`}\r\n                  alt={title}\r\n                />\r\n                <Rating vote={vote_average}>{vote_average.toFixed()}</Rating>\r\n              </PosterWrapper>\r\n\r\n              <InfoWrapper>\r\n                <Year>{release_date.split(\"\").slice(0, 4).join(\"\")}</Year>\r\n                <Subtitle>Genres:</Subtitle>\r\n                <Genres>\r\n                  {genres.slice(0, 2).map((genre) => (\r\n                    <Genre key={genre.id}>{genre.name}</Genre>\r\n                  ))}\r\n                </Genres>\r\n                <Subtitle>Runtime:</Subtitle>\r\n                <Runtime>{runtime}min</Runtime>\r\n              </InfoWrapper>\r\n            </MovieWrapper>\r\n            <Title>{title}</Title>\r\n            <Buttons movie={movie} onToggle={onToggle} />\r\n            <Overview>{overview}</Overview>\r\n          </Container>\r\n          <CastMobile cast={cast} />\r\n          <ImagesSwiper images={images} />\r\n        </PageWrapper>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nSingleMovieMobile.propTypes = {\r\n  movie: PropTypes.shape({\r\n    poster_path: PropTypes.string,\r\n    title: PropTypes.string,\r\n    release_date: PropTypes.string,\r\n    runtime: PropTypes.number,\r\n    vote_average: PropTypes.number,\r\n    overview: PropTypes.string,\r\n  }),\r\n  cast: PropTypes.arrayOf(PropTypes.shape),\r\n  onToggle: PropTypes.func,\r\n};\r\n","import { useQueries } from \"@tanstack/react-query\";\r\nimport { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\nimport {\r\n  getMovieById,\r\n  getCastInfo,\r\n  getMovieImages,\r\n  getMovieVideo,\r\n} from \"../../services/api/movies-api\";\r\n\r\nimport PopUp from \"../../components/PopUp\";\r\nimport Trailer from \"../../components/Trailer\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport VideoError from \"../../components/VideoError\";\r\n\r\nimport SingleMovie from \"../../components/SingleMovie\";\r\nimport SingleMovieMobile from \"../../components/SingleMovieMobile\";\r\n\r\nfunction MovieView() {\r\n  const { movieId } = useParams();\r\n  const [showPopUp, setPopUp] = useState(false);\r\n\r\n  const isMobile = useMediaQuery(\"(max-width: 767px)\");\r\n\r\n  const [movieQuery, castQuery, imagesQuery, trailerQuery] = useQueries({\r\n    queries: [\r\n      {\r\n        queryKey: [\"movie\"],\r\n        queryFn: () => getMovieById(movieId),\r\n      },\r\n\r\n      {\r\n        queryKey: [\"cast\"],\r\n        queryFn: () => getCastInfo(movieId),\r\n      },\r\n      { queryKey: [\"images\"], queryFn: () => getMovieImages(movieId) },\r\n      { queryKey: [\"trailer\"], queryFn: () => getMovieVideo(movieId) },\r\n    ],\r\n  });\r\n\r\n  const togglePopUp = () => {\r\n    setPopUp(!showPopUp);\r\n  };\r\n\r\n  if (movieQuery.isFetching) {\r\n    return <Loader />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {isMobile ? (\r\n        <SingleMovieMobile\r\n          movie={movieQuery.data}\r\n          cast={castQuery.data}\r\n          images={imagesQuery.data}\r\n          onToggle={togglePopUp}\r\n        />\r\n      ) : (\r\n        <SingleMovie\r\n          movie={movieQuery.data}\r\n          cast={castQuery.data}\r\n          images={imagesQuery.data}\r\n          onToggle={togglePopUp}\r\n        />\r\n      )}\r\n\r\n      {showPopUp && (\r\n        <PopUp onClose={togglePopUp}>\r\n          {trailerQuery.isSuccess ? (\r\n            <Trailer videos={trailerQuery.data} />\r\n          ) : (\r\n            <VideoError />\r\n          )}\r\n        </PopUp>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default MovieView;\r\n"],"names":["MainContainer","styled","Container","children","getPopularMovies","page","config","url","params","axios","data","getTopRatedMovies","console","log","error","getUpcomingMovies","getMoviesByQuery","query","getMovieById","id","getCastInfo","cast","getMovieVideo","results","getMovieImages","backdrops","api_key","language","include_image_language","getColor","vote","num","toFixed","NAME","getFavourites","JSON","parse","localStorage","getItem","addFavourite","film","fav","unshift","setItem","stringify","deleteFavourite","filter","i","inFavourites","find","Overlay","Modal","modalRoot","document","querySelector","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","onClick","currentTarget","target","Video","ReactPlayer","Trailer","videos","useState","trailer","setTrailer","trailers","video","type","src","key","title","frameBorder","allow","allowFullScreen","MainWrapper","LoaderWrapper","color","height","width","VideoError","errorImage","alt","style","Box","props","theme","space","ButtonTrailer","fontWeights","bold","fontSizes","s","colors","red","white","ButtonFav","Buttons","movie","onToggle","setFav","user","useAuthState","auth","disabled","size","OverviewWrapper","ShortDesc","lineHeights","heading","Overview","tagline","Button","ButtonPlay","CastList","CastListItem","CastInfo","CastName","Cast","slice","map","name","profile_path","noImageFound","ImageSwiper","ImagesSwiper","images","length","effect","spaceBetween","pagination","clickable","modules","Pagination","EffectFade","file_path","Options","Year","fonts","numbers","m","Genre","ms","peach","Runtime","addText","lightviolet","Rating","RatingFull","MovieInfo","release_date","genres","runtime","vote_average","split","join","genre","Navigation","navigate","useNavigate","Breadcrumbs","sx","Link","underline","display","alignItems","cursor","fontSize","Home","mr","Typography","fontWeight","Movie","MovieScreen","backdrop","NavigationWrapper","MovieWrapper","Title","xl","l","DetailsButton","xs","animation","main","hover","DetailsWrapper","PosterWrapper","Poster","InfoWrapper","Subtitle","Genres","CastError","Details","overview","original_title","poster_path","open","setOpen","toggleDrawer","event","Drawer","anchor","onKeyDown","actor","original_name","SingleMovie","backdrop_path","Item","muiStyled","Paper","backgroundColor","padding","spacing","textAlign","DropdownTitle","black","Image","ActorName","xxs","CastMobile","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","Grid","container","item","PageWrapper","SingleMovieMobile","movieId","useParams","showPopUp","setPopUp","isMobile","useMediaQuery","useQueries","queries","queryKey","queryFn","movieQuery","castQuery","imagesQuery","trailerQuery","togglePopUp","isFetching","Loader","isSuccess"],"sourceRoot":""}