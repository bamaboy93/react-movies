{"version":3,"file":"static/js/779.4595939c.chunk.js","mappings":"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","sources":["webpack://react-movies/./src/components/Container/Container.module.scss?9ade","components/Container/Container.jsx","webpack://react-movies/./src/components/MovieData/MovieData.module.scss?a91e","components/MovieData/MovieData.jsx","webpack://react-movies/./src/components/Navigation/Navigation.module.scss?a7be","components/Navigation/Navigation.jsx","webpack://react-movies/./src/components/Pagination/Pagination.module.scss?7fb8","components/Pagination/Pagination.jsx","hooks/Pagination.jsx","services/api/movies-api.js","services/status.js","views/UpcomingView/UpcomingView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__BWGcJ\"};","import s from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MovieData_moviesList__CwI+f\",\"moviesItem\":\"MovieData_moviesItem__ohZB7\",\"movieCard\":\"MovieData_movieCard__6M+qA\",\"poster\":\"MovieData_poster__zNshO\",\"movieTitle\":\"MovieData_movieTitle__olQ39\",\"vote\":\"MovieData_vote__AsXTQ\",\"voteOverlay\":\"MovieData_voteOverlay__lWDw+\"};","import { Link, useLocation } from \"react-router-dom\";\r\n// import PropTypes from \"prop-types\";\r\nimport noImageFound from \"../../styles/images/noimage.jpg\";\r\n\r\nimport s from \"./MovieData.module.scss\";\r\n\r\nexport default function MovieData({ movies }) {\r\n  const url = useLocation();\r\n\r\n  function getColor(vote) {\r\n    const num = vote.toFixed();\r\n    if (num >= 8) {\r\n      return \"#7dd87d\";\r\n    } else if (num < 8 && num >= 5) {\r\n      return \"#eec60a\";\r\n    } else {\r\n      return \"#eb2632\";\r\n    }\r\n  }\r\n  return (\r\n    <div>\r\n      <ul className={s.moviesList}>\r\n        {movies.map(({ id, poster_path, title, vote_average }) => (\r\n          <li key={id} className={s.moviesItem}>\r\n            <Link to={`${url.pathname}/${id}`}>\r\n              <div className={s.voteOverlay}>\r\n                <p style={{ color: getColor(vote_average) }} className={s.vote}>\r\n                  {vote_average.toFixed()}\r\n                </p>\r\n              </div>\r\n              <img\r\n                src={\r\n                  poster_path\r\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n                    : `${noImageFound}`\r\n                }\r\n                alt={title}\r\n                className={s.poster}\r\n              />\r\n\r\n              <div className={s.movieCard}>\r\n                <p className={s.movieTitle}>{title}</p>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\n// MovieData.propTypes = {\r\n//   movies: PropTypes.shape,\r\n// };\r\n","// extracted by mini-css-extract-plugin\nexport default {\"linkContainer\":\"Navigation_linkContainer__KaXWq\",\"link\":\"Navigation_link__ImyVo\",\"active\":\"Navigation_active__x+RI1\"};","import { NavLink } from \"react-router-dom\";\r\n\r\nimport s from \"./Navigation.module.scss\";\r\n\r\nexport default function Navigation() {\r\n  return (\r\n    <div className={s.linkContainer}>\r\n      <span className={s.item}>\r\n        <NavLink\r\n          className={({ isActive }) => (isActive ? s.active : s.link)}\r\n          to=\"/top_rated\"\r\n        >\r\n          Top Rated Movies\r\n        </NavLink>\r\n      </span>\r\n\r\n      <span className={s.item}>\r\n        <NavLink\r\n          className={({ isActive }) => (isActive ? s.active : s.link)}\r\n          to=\"/upcoming\"\r\n        >\r\n          Upcoming\r\n        </NavLink>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Pagination_wrapper__aysuB\"};","import Pagination from \"@mui/material/Pagination\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./Pagination.module.scss\";\r\n\r\nexport default function MoviePagination({ page, totalpages, onChange }) {\r\n  const pages = totalpages > 500 ? 500 : totalpages;\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <Pagination count={pages} page={page} onChange={onChange} />\r\n    </div>\r\n  );\r\n}\r\n\r\nMoviePagination.propTypes = {\r\n  page: PropTypes.number,\r\n  onChange: PropTypes.func,\r\n};\r\n","import { useState } from \"react\";\r\n\r\nfunction usePagination(data, itemsPerPage) {\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const maxPage = data;\r\n\r\n  function currentData() {\r\n    const begin = (currentPage - 1) * itemsPerPage;\r\n    const end = begin + itemsPerPage;\r\n    return data.slice(begin, end);\r\n  }\r\n\r\n  function next() {\r\n    setCurrentPage((currentPage) => Math.min(currentPage + 1, maxPage));\r\n  }\r\n\r\n  function prev() {\r\n    setCurrentPage((currentPage) => Math.max(currentPage - 1, 1));\r\n  }\r\n\r\n  function jump(page) {\r\n    const pageNumber = Math.max(1, page);\r\n    setCurrentPage((currentPage) => Math.min(pageNumber, maxPage));\r\n  }\r\n\r\n  return { next, prev, jump, currentData, currentPage, maxPage };\r\n}\r\n\r\nexport default usePagination;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"a7722589dc29fac056c18bf39b029797\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: \"en-US\",\r\n};\r\n////////////////////////Popular\r\nasync function getPopularMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/popular`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return;\r\n  }\r\n}\r\n//////////////////// Top_Rated\r\nasync function getTopRatedMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/top_rated`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////// Upcoming\r\nasync function getUpcomingMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/upcoming`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n///////////////////////// SearchQuery\r\nasync function getMoviesByQuery(query, page) {\r\n  try {\r\n    const config = {\r\n      url: `search/movie`,\r\n      params: {\r\n        query,\r\n        page,\r\n      },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////// Single Movie\r\nasync function getMovieById(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n//////////////////////////// Cast\r\nasync function getCastInfo(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/credits`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.cast;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////////////// Trailers\r\nasync function getMovieVideo(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/videos`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n//////////////////////////// Images\r\nasync function getMovieImages(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/images`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n\r\nconst api = {\r\n  getPopularMovies,\r\n  getTopRatedMovies,\r\n  getUpcomingMovies,\r\n  getMoviesByQuery,\r\n  getMovieById,\r\n  getCastInfo,\r\n  getMovieVideo,\r\n  getMovieImages,\r\n};\r\n\r\nexport default api;\r\n","const Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nexport default Status;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nimport Status from \"../../services/status\";\r\nimport api from \"../../services/api/movies-api\";\r\nimport usePagination from \"../../hooks/Pagination\";\r\n\r\nimport Container from \"../../components/Container\";\r\n\r\nimport MovieData from \"../../components/MovieData\";\r\nimport Navigation from \"../../components/Navigation\";\r\nimport Pagination from \"../../components/Pagination\";\r\n\r\nexport default function UpcomingView() {\r\n  const [movies, setMovies] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalpages, setTotalPages] = useState(null);\r\n\r\n  /////////////////////////Pagination\r\n  const PER_PAGE = 20;\r\n  const _DATA = usePagination(totalpages, PER_PAGE);\r\n  const handleChange = (e, p) => {\r\n    setCurrentPage(p);\r\n    _DATA.jump(p);\r\n  };\r\n\r\n  /////Upcoming Movies\r\n  useEffect(() => {\r\n    setStatus(Status.PENDING);\r\n\r\n    api\r\n      .getUpcomingMovies(currentPage)\r\n      .then(({ results, page, total_pages }) => {\r\n        setMovies(results);\r\n        setCurrentPage(page);\r\n        setTotalPages(total_pages);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [error, currentPage]);\r\n\r\n  return (\r\n    <main>\r\n      <Container>\r\n        <Navigation />\r\n\r\n        {status === Status.PENDING}\r\n\r\n        {status === Status.REJECTED}\r\n\r\n        {status === Status.RESOLVED && (\r\n          <>\r\n            <MovieData movies={movies} />\r\n\r\n            {totalpages > 1 && (\r\n              <Pagination\r\n                page={currentPage}\r\n                totalpages={totalpages}\r\n                onChange={handleChange}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n      </Container>\r\n    </main>\r\n  );\r\n}\r\n"],"names":["children","className","s","MovieData","movies","url","useLocation","getColor","vote","num","toFixed","map","id","poster_path","title","vote_average","to","pathname","style","color","src","noImageFound","alt","Navigation","isActive","MoviePagination","page","totalpages","onChange","pages","Pagination","count","data","itemsPerPage","useState","currentPage","setCurrentPage","maxPage","next","Math","min","prev","max","jump","pageNumber","currentData","begin","end","slice","config","params","axios","console","log","error","query","cast","results","getMovieImages","api_key","language","api","getPopularMovies","getTopRatedMovies","getUpcomingMovies","getMoviesByQuery","getMovieById","getCastInfo","getMovieVideo","IDLE","PENDING","RESOLVED","REJECTED","UpcomingView","setMovies","setError","Status","status","setStatus","setTotalPages","_DATA","usePagination","useEffect","then","total_pages","catch","Container","e","p"],"sourceRoot":""}