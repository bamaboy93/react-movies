{"version":3,"file":"static/js/960.d423877f.chunk.js","mappings":"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","sources":["../node_modules/react-toastify/src/utils/propValidator.ts","../node_modules/react-toastify/src/utils/constant.ts","../node_modules/react-toastify/src/utils/collapseToast.ts","../node_modules/react-toastify/src/utils/cssTransition.tsx","../node_modules/react-toastify/src/utils/mapper.ts","../node_modules/react-toastify/src/core/eventManager.ts","../node_modules/react-toastify/src/hooks/useToastContainer.ts","../node_modules/react-toastify/src/hooks/useToast.ts","../node_modules/react-toastify/src/components/CloseButton.tsx","../node_modules/react-toastify/src/components/ProgressBar.tsx","../node_modules/react-toastify/src/components/Icons.tsx","../node_modules/react-toastify/src/components/Toast.tsx","../node_modules/react-toastify/src/components/Transitions.tsx","../node_modules/react-toastify/src/components/ToastContainer.tsx","../node_modules/react-toastify/src/core/toast.ts","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js"],"sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n      node.addEventListener('animationcancel', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      node.removeEventListener('animationcancel', onEntered);\n      if (\n        animationStep.current === AnimationStep.Enter &&\n        e.type !== 'animationcancel'\n      ) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import { Toast, ToastItem, ToastItemStatus } from '../types';\n\nexport function toToastItem(toast: Toast, status: ToastItemStatus): ToastItem {\n  return {\n    content: toast.content,\n    containerId: toast.props.containerId,\n    id: toast.props.toastId,\n    theme: toast.props.theme,\n    type: toast.props.type,\n    data: toast.props.data || {},\n    isLoading: toast.props.isLoading,\n    icon: toast.props.icon,\n    status\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastItem\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\n\nexport type OnChangeCallback = (toast: ToastItem) => void;\n\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, data: ToastItem): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay,\n  toToastItem\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.props = props;\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const { toastContent, toastProps, staleId } =\n      instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      containerId: options.containerId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        const removed = toToastItem(toastToRender.get(toastId)!, 'removed');\n        toastToRender.delete(toastId);\n\n        eventManager.emit(Event.Change, removed);\n\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay)) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    const toast = {\n      content,\n      props: toastProps\n    };\n    toastToRender.set(toastId, toast);\n\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n    eventManager.emit(\n      Event.Change,\n      toToastItem(toast, toast.props.updateId == null ? 'added' : 'updated')\n    );\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${\n        1 - Math.abs(drag.delta / drag.removalDistance)\n      }`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { ToastProps } from '../types';\nimport { Default, isFn, isStr } from '../utils';\nimport { useToast } from '../hooks/useToast';\nimport { Icons } from './Icons';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const { isRunning, preventExitTransition, toastRef, eventHandlers } =\n    useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  const maybeIcon = Icons[type as keyof typeof Icons];\n  const iconProps = { theme, type };\n  let Icon: React.ReactNode = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (React.isValidElement(icon)) {\n    Icon = React.cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]:\n                  !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","// https://github.com/yannickcr/eslint-plugin-react/issues/3140\n/* eslint react/prop-types: \"off\" */\nimport React, { forwardRef, StyleHTMLAttributes, useEffect } from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks/useToastContainer';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer = forwardRef<HTMLDivElement, ToastContainerProps>(\n  (props, ref) => {\n    const { getToastToRender, containerRef, isToastActive } =\n      useToastContainer(props);\n    const { className, style, rtl, containerId } = props;\n\n    function getClassName(position: ToastPosition) {\n      const defaultClassName = cx(\n        `${Default.CSS_NAMESPACE}__toast-container`,\n        `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n        { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n      );\n      return isFn(className)\n        ? className({\n            position,\n            rtl,\n            defaultClassName\n          })\n        : cx(defaultClassName, parseClassName(className));\n    }\n\n    useEffect(() => {\n      if (ref) {\n        (ref as React.MutableRefObject<HTMLDivElement>).current =\n          containerRef.current!;\n      }\n    }, []);\n\n    return (\n      <div\n        ref={containerRef}\n        className={Default.CSS_NAMESPACE as string}\n        id={containerId as string}\n      >\n        {getToastToRender((position, toastList) => {\n          const containerStyle: React.CSSProperties = !toastList.length\n            ? { ...style, pointerEvents: 'none' }\n            : { ...style };\n\n          return (\n            <div\n              className={getClassName(position)}\n              style={containerStyle}\n              key={`container-${position}`}\n            >\n              {toastList.map(({ content, props: toastProps }, i) => {\n                return (\n                  <Toast\n                    {...toastProps}\n                    isIn={isToastActive(toastProps.toastId)}\n                    style={\n                      {\n                        '--nth': i + 1,\n                        '--len': toastList.length\n                      } as StyleHTMLAttributes<HTMLDivElement>\n                    }\n                    key={`toast-${toastProps.key}`}\n                    closeButton={\n                      toastProps.closeButton === true\n                        ? CloseButton\n                        : toastProps.closeButton\n                    }\n                  >\n                    {content}\n                  </Toast>\n                );\n              })}\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n);\n\nToastContainer.displayName = 'ToastContainer';\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import { POSITION, TYPE, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet queue: EnqueuedToast[] = [];\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams<T = unknown> {\n  pending?: string | UpdateOptions<void>;\n  success?: string | UpdateOptions<T>;\n  error?: string | UpdateOptions<any>;\n}\n\nfunction handlePromise<T = unknown>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams<T>,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null,\n    delay: 100\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions<T> | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Subscribe to change when a toast is added, removed and updated\n *\n * Usage:\n * ```\n * const unsubscribe = toast.onChange((payload) => {\n *   switch (payload.status) {\n *   case \"added\":\n *     // new toast added\n *     break;\n *   case \"updated\":\n *     // toast updated\n *     break;\n *   case \"removed\":\n *     // toast has been removed\n *     break;\n *   }\n * })\n * ```\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  eventManager.on(Event.Change, callback);\n  return () => {\n    eventManager.off(Event.Change, callback);\n  };\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n  });\n\nexport { toast };\n","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}"],"names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","duration","cssTransition","enter","collapseDuration","exit","appendPosition","collapse","children","isIn","position","preventExitTransition","done","nodeRef","enterClassName","exitClassName","baseClassName","useRef","animationStep","onEntered","e","target","current","node","dispatchEvent","Event","removeEventListener","type","className","onExited","scrollHeight","style","requestAnimationFrame","minHeight","height","transition","padding","margin","setTimeout","collapseToast","useLayoutEffect","addEventListener","useEffect","React","toToastItem","toast","status","containerId","props","id","theme","data","isLoading","icon","eventManager","list","Map","emitQueue","on","event","callback","this","has","set","get","push","off","cb","filter","delete","cancelEmit","timers","forEach","clearTimeout","emit","timer","useToastContainer","useReducer","x","forceUpdate","useState","toastIds","setToastIds","containerRef","toastToRender","isToastActive","indexOf","instance","toastKey","displayedToast","count","queue","getToast","clearWaitingQueue","limit","length","removeToast","state","dequeueToast","shift","appendToast","toastContent","toastProps","staleId","buildToast","delay","options","enableMultiContainer","updateId","closeToast","isNotAnUpdate","toastAutoClose","containerAutoClose","key","closeButton","rtl","toastClassName","bodyClassName","toastStyle","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","removed","queueLen","freeSlot","toDequeue","i","onOpen","onClose","cloneElement","getToastToRender","toRender","collection","Array","from","values","newestOnTop","reverse","p","getX","targetTouches","clientX","getY","clientY","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","onDragStart","document","onDragMove","onDragEnd","getBoundingClientRect","nativeEvent","offsetWidth","offsetHeight","onDragTransitionEnd","top","bottom","left","right","pauseToast","playToast","transform","opacity","Math","abs","once","hasFocus","window","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onMouseEnter","onMouseLeave","CloseButton","t","ariaLabel","stopPropagation","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","defaultClassName","cx","classNames","defaultProps","Svg","_ref","rest","width","fill","Icons","info","warning","success","error","spinner","Toast","Transition","cssClasses","isProgressControlled","maybeIcon","iconProps","Icon","ref","Bounce","ToastContainer","forwardRef","getClassName","toastList","containerStyle","pointerEvents","map","displayName","latestInstance","containers","generateToastId","random","toString","substring","getToastId","dispatchToast","size","mergeOptions","createToastByType","loading","promise","pending","render","resetParams","resolver","input","result","baseParams","params","update","dismiss","then","catch","err","warn","dark","isActive","container","oldOptions","oldContent","nextOptions","onChange","containerInstance","item","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","arguments","source","getOwnPropertyDescriptors","defineProperties","defineProperty"],"sourceRoot":""}