{"version":3,"file":"static/js/50.1ce22235.chunk.js","mappings":"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","sources":["components/Container/Container.styled.jsx","components/Container/Container.jsx","services/api/movies-api.js","services/getColor.js","../node_modules/@mui/icons-material/esm/PlayCircleOutlined.js","../node_modules/@mui/icons-material/esm/ExpandMore.js","../node_modules/@mui/icons-material/esm/PlayCircleFilledOutlined.js","components/MainMovie/MainMovie.styled.jsx","components/MainMovie/MainMovie.jsx","../node_modules/@tanstack/react-query/src/useQuery.ts","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Upcoming/Upcoming.styled.jsx","components/Upcoming/Upcoming.jsx","components/NowPlaying/NowPlaying.styled.jsx","components/NowPlaying/NowPlaying.jsx","components/Swiper/Swiper.styled.jsx","components/Swiper/Swiper.jsx","views/HomeView/HomeView.jsx","../node_modules/@tanstack/react-query/src/useBaseQuery.ts"],"sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const MainContainer = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 0px 15px;\r\n\r\n  @media (min-width: 375px) {\r\n    width: 375px;\r\n    padding: 0px 15px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 768px;\r\n    padding: 0px 30px;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    width: 1280px;\r\n    padding: 0px 15px;\r\n  }\r\n`;\r\n","import { MainContainer } from \"./Container.styled\";\r\n\r\nexport default function Container({ children }) {\r\n  return <MainContainer>{children}</MainContainer>;\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"a7722589dc29fac056c18bf39b029797\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: \"en-US\",\r\n  include_image_language: \"en,null\",\r\n};\r\n\r\n////////////////////////Popular\r\nasync function getPopularMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/popular`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return;\r\n  }\r\n}\r\n\r\n//////////////////// Top_Rated\r\nasync function getTopRatedMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/top_rated`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////// Upcoming\r\nasync function getUpcomingMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/upcoming`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n///////////////////////// SearchQuery\r\nasync function getMoviesByQuery(query, page) {\r\n  try {\r\n    const config = {\r\n      url: `search/movie`,\r\n      params: {\r\n        page,\r\n        query,\r\n      },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////// Single Movie\r\nasync function getMovieById(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n//////////////////////////// Cast\r\nasync function getCastInfo(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/credits`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.cast;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////////////// Trailers\r\nasync function getMovieVideo(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/videos`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n//////////////////////////// Images\r\nasync function getMovieImages(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/images`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.backdrops;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n\r\nexport {\r\n  getPopularMovies,\r\n  getUpcomingMovies,\r\n  getTopRatedMovies,\r\n  getMoviesByQuery,\r\n  getMovieById,\r\n  getCastInfo,\r\n  getMovieImages,\r\n  getMovieVideo,\r\n};\r\n","export default function getColor(vote) {\r\n  const num = vote.toFixed();\r\n  if (num >= 8) {\r\n    return \"#7dd87d\";\r\n  } else if (num < 8 && num >= 5) {\r\n    return \"#eec60a\";\r\n  } else {\r\n    return \"#eb2632\";\r\n  }\r\n}\r\n","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm-2.5-3.5 7-4.5-7-4.5v9z\"\n}), 'PlayCircleOutlined');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 14.5v-9l6 4.5-6 4.5z\"\n}), 'PlayCircleFilledOutlined');","import styled from \"@emotion/styled\";\r\nimport { Box } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport getColor from \"../../services/getColor\";\r\n\r\nexport const MainWrapper = styled.div`\r\n  position: relative;\r\n  min-height: 100svh;\r\n  background-image: ${(props) =>\r\n    `url(https://image.tmdb.org/t/p/original${props.backdrop})`};\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  z-index: 1;\r\n  &:before {\r\n    content: \"\";\r\n    display: block;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n\r\n    background: rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const LogoWrapper = styled.div`\r\n  margin-bottom: ${(props) => props.theme.space[4]}px;\r\n  padding: 10px 10px 10px 15px;\r\n  width: 260px;\r\n  border-left: 5px solid ${(props) => props.theme.colors.red};\r\n  background: transparent\r\n    linear-gradient(270deg, rgba(11, 1, 2, 0) 0%, rgba(255, 55, 65, 0.3) 100%);\r\n  @media (min-width: 768px) {\r\n    margin-bottom: ${(props) => props.theme.space[5]}px;\r\n  }\r\n`;\r\n\r\nexport const LogoLink = styled.a`\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  line-height: ${(props) => props.theme.lineHeights.heading};\r\n  color: ${(props) => props.theme.colors.red};\r\n  @media screen and (min-width: 768px) {\r\n    font-size: ${(props) => props.theme.fontSizes.m};\r\n  }\r\n`;\r\n\r\nexport const MovieWrapper = styled.div`\r\n  @media (min-width: 768px) {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n`;\r\n\r\nexport const InfoWrapper = styled.div``;\r\n\r\nexport const MainTitle = styled.h1`\r\n  display: inline-block;\r\n  max-width: 320px;\r\n  margin-bottom: 50px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.l};\r\n  line-height: ${(props) => props.theme.lineHeights.heading};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n\r\n  @media (min-width: 768px) {\r\n    max-width: 450px;\r\n    font-size: ${(props) => props.theme.fontSizes.lxl};\r\n  }\r\n  @media (min-width: 1280px) {\r\n    max-width: 650px;\r\n    font-size: ${(props) => props.theme.fontSizes.xxl};\r\n  }\r\n`;\r\n\r\nexport const Info = styled.div`\r\n  max-width: 320px;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 400px;\r\n  }\r\n  @media screen and (min-width: 1280px) {\r\n    max-width: 650px;\r\n  }\r\n`;\r\n\r\nexport const Options = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nexport const OptionsItem = styled.p`\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  margin-right: ${(props) => props.theme.space[4]}px;\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: ${(props) => props.theme.fontSizes.m};\r\n  }\r\n`;\r\n\r\nexport const Rating = styled.p`\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  margin-right: ${(props) => props.theme.space[4]}px;\r\n  color: ${(props) => getColor(props.vote)};\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: ${(props) => props.theme.fontSizes.m};\r\n  }\r\n`;\r\n\r\nexport const Imdb = styled.a`\r\n  width: 40px;\r\n  height: 40px;\r\n  color: ${(props) => props.theme.colors.red};\r\n\r\n  svg {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nexport const OverviewBox = styled(Box)(({ theme }) => ({\r\n  marginBottom: theme.spacing(4),\r\n\r\n  \"& .MuiAccordion-root\": {\r\n    backgroundColor: \"rgba(49, 50, 60, 0.55)\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  \"& .MuiAccordionSummary-root\": {\r\n    paddingLeft: theme.spacing(1),\r\n  },\r\n  \"& .MuiAccordionSummary-expandIconWrapper\": {\r\n    color: theme.palette.secondary.main,\r\n  },\r\n}));\r\n\r\nexport const Block = styled.div``;\r\n\r\nexport const Subtitle = styled.h2`\r\n  margin-right: ${(props) => props.theme.space[3]}px;\r\n  color: ${(props) => props.theme.colors.red};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n`;\r\n\r\nexport const CastList = styled.ul`\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const CastListItem = styled.li`\r\n  display: inline-block;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  &:not(:last-child)::after {\r\n    content: \",\";\r\n    margin-right: ${(props) => props.theme.space[1]}px;\r\n  }\r\n`;\r\n\r\nexport const CastError = styled.p`\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n`;\r\n\r\nexport const LinkWrapper = styled.div``;\r\n\r\nexport const WatchLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-right: ${(props) => props.theme.space[9]}px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  text-transform: uppercase;\r\n  letter-spacing: 3px;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  @media screen and (max-width: 767px) {\r\n    display: none;\r\n  }\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    margin-right: 0;\r\n    font-size: ${(props) => props.theme.fontSizes.ms};\r\n  }\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n    margin-right: ${(props) => props.theme.space[6]}px;\r\n    opacity: 0.5;\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n    @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n      width: 60px;\r\n      height: 60px;\r\n      margin-right: ${(props) => props.theme.space[4]}px;\r\n    }\r\n  }\r\n\r\n  &:hover svg {\r\n    color: ${(props) => props.theme.colors.hover}\r\n    opacity: 1;\r\n    scale: 1.5;\r\n  }\r\n`;\r\n\r\nexport const MobileWatchLink = styled(Link)`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: ${(props) => props.theme.space[3]}px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  text-transform: uppercase;\r\n\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  @media screen and (min-width: 768px) {\r\n    display: none;\r\n  }\r\n\r\n  svg {\r\n    width: 30px;\r\n    height: 30px;\r\n    margin-right: ${(props) => props.theme.space[1]}px;\r\n    fill: ${(props) => props.theme.colors.hover};\r\n\r\n    transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n  &:hover svg {\r\n    scale: 1.2;\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { useQuery } from \"@tanstack/react-query\";\r\nimport { getCastInfo } from \"../../services/api/movies-api\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { FaImdb } from \"react-icons/fa\";\r\nimport { Accordion, AccordionSummary, AccordionDetails } from \"@mui/material\";\r\nimport {\r\n  ExpandMore,\r\n  PlayCircleOutlined,\r\n  PlayCircleFilledOutlined,\r\n} from \"@mui/icons-material\";\r\n\r\nimport Container from \"../Container\";\r\nimport {\r\n  MainWrapper,\r\n  LogoWrapper,\r\n  LogoLink,\r\n  MovieWrapper,\r\n  InfoWrapper,\r\n  MainTitle,\r\n  Info,\r\n  Options,\r\n  OptionsItem,\r\n  Rating,\r\n  Overview,\r\n  Block,\r\n  Subtitle,\r\n  CastList,\r\n  CastListItem,\r\n  LinkWrapper,\r\n  Wrapper,\r\n  WatchLink,\r\n  MobileWatchLink,\r\n  CastError,\r\n  OverviewBox,\r\n  Imdb,\r\n} from \"./MainMovie.styled\";\r\n\r\nexport default function MainMovie({ movie }) {\r\n  const {\r\n    id,\r\n    backdrop_path,\r\n    title,\r\n    release_date,\r\n    vote_average,\r\n\r\n    overview,\r\n    tagline,\r\n    imdb_id,\r\n  } = movie;\r\n  const url = useLocation();\r\n\r\n  const { data, isSuccess } = useQuery({\r\n    queryKey: [\"cast\"],\r\n    queryFn: () => getCastInfo(id),\r\n  });\r\n\r\n  return (\r\n    <MainWrapper backdrop={backdrop_path}>\r\n      <Wrapper>\r\n        <Container>\r\n          <LogoWrapper>\r\n            <LogoLink href=\"/\">Movie Base</LogoLink>\r\n          </LogoWrapper>\r\n          <MovieWrapper>\r\n            <InfoWrapper>\r\n              <MainTitle>{title}</MainTitle>\r\n              <Info>\r\n                <Options>\r\n                  {release_date && (\r\n                    <OptionsItem>\r\n                      {release_date.split(\"\").slice(0, 4).join(\"\")}\r\n                    </OptionsItem>\r\n                  )}\r\n                  {vote_average && (\r\n                    <Rating vote={vote_average}>\r\n                      {vote_average.toFixed(1)}\r\n                    </Rating>\r\n                  )}\r\n                  {imdb_id && (\r\n                    <Imdb\r\n                      href={`https://www.imdb.com/title/${imdb_id}`}\r\n                      target=\"_blank\"\r\n                    >\r\n                      <FaImdb />\r\n                    </Imdb>\r\n                  )}\r\n\r\n                  <MobileWatchLink to={`${url.pathname}/${id}`}>\r\n                    <PlayCircleOutlined />\r\n                    Watch Now\r\n                  </MobileWatchLink>\r\n                </Options>\r\n                <OverviewBox>\r\n                  <Accordion>\r\n                    <AccordionSummary\r\n                      expandIcon={<ExpandMore />}\r\n                      aria-controls=\"overview-content\"\r\n                      id=\"overview-header\"\r\n                    >\r\n                      <Overview>{tagline}</Overview>\r\n                    </AccordionSummary>\r\n                    <AccordionDetails>\r\n                      <Overview>{overview}</Overview>\r\n                    </AccordionDetails>\r\n                  </Accordion>\r\n                </OverviewBox>\r\n              </Info>\r\n\r\n              <Block>\r\n                <Subtitle>Starring:</Subtitle>\r\n                {isSuccess ? (\r\n                  <CastList>\r\n                    {data.slice(0, 4).map((actor) => (\r\n                      <CastListItem key={actor.id}>\r\n                        {actor.original_name}\r\n                      </CastListItem>\r\n                    ))}\r\n                  </CastList>\r\n                ) : (\r\n                  <CastError>...</CastError>\r\n                )}\r\n              </Block>\r\n            </InfoWrapper>\r\n            <LinkWrapper>\r\n              <WatchLink to={`${url.pathname}/${id}`}>\r\n                <PlayCircleFilledOutlined />\r\n                Watch Now\r\n              </WatchLink>\r\n            </LinkWrapper>\r\n          </MovieWrapper>\r\n        </Container>\r\n      </Wrapper>\r\n    </MainWrapper>\r\n  );\r\n}\r\n\r\nMainMovie.propTypes = {\r\n  movie: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    backdrop_path: PropTypes.string,\r\n    title: PropTypes.string,\r\n    release_date: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n    adult: PropTypes.bool,\r\n    overview: PropTypes.string,\r\n    tagline: PropTypes.string,\r\n    imdb_id: PropTypes.string,\r\n  }),\r\n};\r\n","import type { QueryFunction, QueryKey } from '@tanstack/query-core'\nimport { parseQueryArgs, QueryObserver } from '@tanstack/query-core'\nimport type {\n  DefinedUseQueryResult,\n  UseQueryOptions,\n  UseQueryResult,\n} from './types'\nimport { useBaseQuery } from './useBaseQuery'\n\n// HOOK\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  options: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData?: () => undefined },\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn' | 'initialData'\n  > & { initialData: TQueryFnData | (() => TQueryFnData) },\n): DefinedUseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData = unknown,\n  TError = unknown,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  queryKey: TQueryKey,\n  queryFn: QueryFunction<TQueryFnData, TQueryKey>,\n  options?: Omit<\n    UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n    'queryKey' | 'queryFn'\n  >,\n): UseQueryResult<TData, TError>\n\nexport function useQuery<\n  TQueryFnData,\n  TError,\n  TData = TQueryFnData,\n  TQueryKey extends QueryKey = QueryKey,\n>(\n  arg1: TQueryKey | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg2?:\n    | QueryFunction<TQueryFnData, TQueryKey>\n    | UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n  arg3?: UseQueryOptions<TQueryFnData, TError, TData, TQueryKey>,\n): UseQueryResult<TData, TError> {\n  const parsedOptions = parseQueryArgs(arg1, arg2, arg3)\n  return useBaseQuery(parsedOptions, QueryObserver)\n}\n","import styled from \"@emotion/styled\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const SectionWrapper = styled.section`\r\n  padding-top: ${(props) => props.theme.space[9]}px;\r\n`;\r\n\r\nexport const Nav = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: ${(props) => props.theme.space[4]}px;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n  line-height: ${(props) => props.theme.lineHeights.heading};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n\r\n  @media (min-width: 1280px) {\r\n    font-size: ${(props) => props.theme.fontSizes.m};\r\n  }\r\n`;\r\n\r\nexport const Link = styled(NavLink)`\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  color: ${(props) => props.theme.colors.red};\r\n  @media (min-width: 1280px) {\r\n    font-size: ${(props) => props.theme.fontSizes.ms};\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport Container from \"../Container\";\r\nimport { Nav, Title, SectionWrapper, Link } from \"./Section.styled\";\r\n\r\nexport default function Section({ title, linkTo, children }) {\r\n  return (\r\n    <SectionWrapper>\r\n      <Container>\r\n        <Nav>\r\n          <Title>{title}</Title>\r\n          <Link to={linkTo}>View All</Link>\r\n        </Nav>\r\n        {children}\r\n      </Container>\r\n    </SectionWrapper>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  linkTo: PropTypes.string.isRequired,\r\n};\r\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const MovieList = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(220px, 1fr));\r\n  gap: 10px;\r\n\r\n  @media (min-width: 768px) and (max-width: 1279px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\r\n  }\r\n`;\r\n\r\nexport const MovieListItem = styled.li`\r\n  position: relative;\r\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\r\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\r\n  transition: all 500ms ease-in;\r\n\r\n  :before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: 0;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    border-left: 4px solid ${(props) => props.theme.colors.hover};\r\n    transition: opacity 300ms ease-in;\r\n  }\r\n\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale3d(1.05, 1.05, 1) translate3d(0, 0, 0) perspective(31.25em);\r\n    transform-origin: 50% 50%;\r\n  }\r\n  &:hover:before,\r\n  &:focus:before {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const MovieTitle = styled.p`\r\n  position: absolute;\r\n  bottom: 10px;\r\n  left: 10px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.xs};\r\n`;\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport noImage from \"../../styles/images/no-image.jpg\";\r\n\r\nimport { MovieList, MovieListItem, MovieTitle } from \"./Upcoming.styled\";\r\n\r\nexport default function Upcoming({ movies }) {\r\n  const url = useLocation();\r\n  return (\r\n    <MovieList>\r\n      {movies.slice(0, 10).map(({ id, backdrop_path, title }) => (\r\n        <Link to={`${url.pathname}/${id}`} key={id}>\r\n          <MovieListItem>\r\n            <img\r\n              src={\r\n                backdrop_path\r\n                  ? `https://image.tmdb.org/t/p/original${backdrop_path}`\r\n                  : `${noImage}`\r\n              }\r\n              alt=\"movie backdrop\"\r\n            />\r\n\r\n            <MovieTitle>{title}</MovieTitle>\r\n          </MovieListItem>\r\n        </Link>\r\n      ))}\r\n    </MovieList>\r\n  );\r\n}\r\n\r\nUpcoming.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      backdrop_path: PropTypes.string,\r\n      title: PropTypes.string,\r\n    })\r\n  ),\r\n};\r\n","import styled from \"@emotion/styled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport getColor from \"../../services/getColor\";\r\n\r\nexport const Section = styled.section`\r\n  padding: 80px 0;\r\n`;\r\n\r\nexport const Wrapper = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: 700px;\r\n  padding-top: ${(props) => props.theme.space[7]}px;\r\n  background-image: ${(props) =>\r\n    `url(https://image.tmdb.org/t/p/original${props.backdrop})`};\r\n  background-size: cover;\r\n  background-position: center;\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    height: 600px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    height: 750px;\r\n    background-attachment: fixed;\r\n  }\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    z-index: 1;\r\n    height: 100%;\r\n    width: 100%;\r\n    top: 0;\r\n    left: 0;\r\n    background-color: ${(props) => props.theme.colors.black};\r\n    opacity: 0.3;\r\n  }\r\n`;\r\n\r\nexport const MovieWrapper = styled.div`\r\n  position: relative;\r\n  z-index: 11;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n\r\n  @media screen and (min-width: 768px) and (max-width: 1279px) {\r\n    padding-left: ${(props) => props.theme.space[9]}px;\r\n    justify-content: start;\r\n  }\r\n`;\r\n\r\nexport const InfoWrapper = styled.div``;\r\n\r\nexport const MovieTitle = styled.h2`\r\n  display: inline-block;\r\n  max-width: 320px;\r\n  margin-bottom: ${(props) => props.theme.space[7]}px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.ml};\r\n  line-height: ${(props) => props.theme.lineHeights.heading};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n  @media screen and (min-width: 768px) {\r\n    margin-bottom: ${(props) => props.theme.space[9]}px;\r\n    max-width: 400px;\r\n    font-size: ${(props) => props.theme.fontSizes.l};\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    max-width: 650px;\r\n    font-size: ${(props) => props.theme.fontSizes.lxl};\r\n  }\r\n`;\r\n\r\nexport const MovieInfo = styled.div`\r\n  max-width: 320px;\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 400px;\r\n  }\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    max-width: 650px;\r\n  }\r\n`;\r\n\r\nexport const Options = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: ${(props) => props.theme.space[5]}px;\r\n`;\r\n\r\nexport const Option = styled.p`\r\n  margin-right: ${(props) => props.theme.space[4]}px;\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: ${(props) => props.theme.fontSizes.m};\r\n  }\r\n`;\r\n\r\nexport const Rating = styled.p`\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n  color: ${(props) => getColor(props.vote)};\r\n\r\n  @media screen and (min-width: 1280px) {\r\n    font-size: ${(props) => props.theme.fontSizes.m};\r\n  }\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nexport const LinkWatch = styled(Link)`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  margin-top: ${(props) => props.theme.space[7]}px;\r\n  padding: 10px 15px;\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.xs};\r\n  text-transform: uppercase;\r\n  background-color: ${(props) => props.theme.colors.red};\r\n  transition: ${(props) => props.theme.animation.main};\r\n\r\n  &:hover {\r\n    letter-spacing: 2px;\r\n    border-left: 3px solid ${(props) => props.theme.colors.hover};\r\n    background-color: transparent;\r\n    color: ${(props) => props.theme.colors.hover};\r\n  }\r\n\r\n  svg {\r\n    width: 20px;\r\n    height: 20px;\r\n    margin-right: ${(props) => props.theme.space[1]}px;\r\n    fill: currentColor;\r\n  }\r\n`;\r\n\r\nexport const PosterWrapper = styled.div`\r\n  display: none;\r\n  @media screen and (min-width: 1280px) {\r\n    display: block;\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { BsFillPlayFill } from \"react-icons/bs\";\r\nimport noImageFound from \"../../styles/images/noimage.jpg\";\r\nimport Container from \"../Container\";\r\nimport {\r\n  InfoWrapper,\r\n  LinkWatch,\r\n  MovieInfo,\r\n  MovieTitle,\r\n  MovieWrapper,\r\n  Option,\r\n  Options,\r\n  Overview,\r\n  PosterWrapper,\r\n  Rating,\r\n  Section,\r\n  Wrapper,\r\n} from \"./NowPlaying.styled\";\r\n\r\nexport default function NowPlaying({ movie }) {\r\n  const url = useLocation();\r\n  const {\r\n    id,\r\n    poster_path,\r\n    backdrop_path,\r\n    title,\r\n    overview,\r\n    release_date,\r\n    vote_average,\r\n    adult,\r\n  } = movie;\r\n  return (\r\n    <Section>\r\n      <Container>\r\n        <Wrapper backdrop={backdrop_path}>\r\n          <MovieWrapper>\r\n            <InfoWrapper>\r\n              <MovieTitle>{title}</MovieTitle>\r\n              <MovieInfo>\r\n                <Options>\r\n                  {release_date && (\r\n                    <Option>\r\n                      {release_date.split(\"\").slice(0, 4).join(\"\")}\r\n                    </Option>\r\n                  )}\r\n                  {vote_average && (\r\n                    <Rating vote={vote_average}>{vote_average}</Rating>\r\n                  )}\r\n                  {adult === true && <Option>18+</Option>}\r\n                </Options>\r\n\r\n                {overview && <Overview>{overview}</Overview>}\r\n\r\n                <LinkWatch to={`${url.pathname}/${id}`}>\r\n                  <BsFillPlayFill /> Watch Now\r\n                </LinkWatch>\r\n              </MovieInfo>\r\n            </InfoWrapper>\r\n            <PosterWrapper>\r\n              <img\r\n                src={\r\n                  poster_path\r\n                    ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n                    : `${noImageFound}`\r\n                }\r\n                alt={title}\r\n                width={350}\r\n              />\r\n            </PosterWrapper>\r\n          </MovieWrapper>\r\n        </Wrapper>\r\n      </Container>\r\n    </Section>\r\n  );\r\n}\r\n\r\nNowPlaying.propTypes = {\r\n  movie: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    backdrop_path: PropTypes.string,\r\n    poster_path: PropTypes.string,\r\n    title: PropTypes.string,\r\n    release_date: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n    adult: PropTypes.bool,\r\n    overview: PropTypes.string,\r\n  }),\r\n};\r\n","import styled from \"@emotion/styled/macro\";\r\nimport getColor from \"../../services/getColor\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  z-index: 33;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  transition: opacity 500ms ease-in;\r\n  :before {\r\n    position: absolute;\r\n    left: 0;\r\n    display: inline-block;\r\n    content: \" \";\r\n    width: 4px;\r\n    height: 100%;\r\n    background-color: ${(props) => props.theme.colors.red};\r\n  }\r\n`;\r\n\r\nexport const MovieTitleOverlay = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 5px;\r\n  min-height: 60px;\r\n  bottom: 0;\r\n  opacity: 1;\r\n  background-color: rgba(49, 50, 60, 0.647);\r\n  cursor: pointer;\r\n\r\n  transition: opacity 500ms ease-in;\r\n`;\r\n\r\nexport const Slide = styled.div`\r\n  position: relative;\r\n\r\n  text-align: center;\r\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\r\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\r\n  transition: all 500ms ease-in;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    transform: scale3d(1.05, 1.05, 1) translate3d(0, 0, 0) perspective(31.25em);\r\n    transform-origin: 50% 50%;\r\n  }\r\n\r\n  &:hover ${MovieTitleOverlay}, &:focus ${MovieTitleOverlay} {\r\n    opacity: 0;\r\n  }\r\n  &:hover ${Overlay}, &:focus ${Overlay} {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const OverlayVote = styled.p`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 20px;\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-size: ${(props) => props.theme.fontSizes.ms};\r\n  color: ${(props) => getColor(props.vote)};\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 100%;\r\n`;\r\n\r\nexport const OverlayTitle = styled.p`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nexport const MovieTitle = styled.p`\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n","import PropTypes from \"prop-types\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\n\r\nimport noImageFound from \"../../styles/images/noimage.jpg\";\r\n\r\nimport \"swiper/scss\";\r\nimport \"swiper/scss/navigation\";\r\n\r\nimport { Navigation, Autoplay } from \"swiper\";\r\nimport {\r\n  Image,\r\n  MovieTitle,\r\n  MovieTitleOverlay,\r\n  Overlay,\r\n  OverlayTitle,\r\n  OverlayVote,\r\n  Slide,\r\n} from \"./Swiper.styled\";\r\n\r\nexport default function SwiperCarousel({ movies }) {\r\n  const url = useLocation();\r\n  return (\r\n    <Swiper\r\n      style={{ \"--swiper-navigation-color\": \"#e50914\" }}\r\n      slidesPerView={1}\r\n      spaceBetween={15}\r\n      loop={true}\r\n      breakpoints={{\r\n        // when window width is >= 768px\r\n        768: {\r\n          width: 768,\r\n          slidesPerView: 4,\r\n        },\r\n        // when window width is >= 1280px\r\n        1280: {\r\n          width: 1280,\r\n          slidesPerView: 6,\r\n        },\r\n      }}\r\n      autoplay={{\r\n        delay: 2500,\r\n        disableOnInteraction: false,\r\n      }}\r\n      navigation={true}\r\n      modules={[Autoplay, Navigation]}\r\n    >\r\n      {movies.map(({ id, poster_path, title, vote_average }) => (\r\n        <SwiperSlide key={id}>\r\n          <Slide>\r\n            <Link to={`${url.pathname}/${id}`}>\r\n              <Overlay>\r\n                <OverlayVote vote={vote_average}>\r\n                  {vote_average.toFixed()}\r\n                </OverlayVote>\r\n                <OverlayTitle>{title}</OverlayTitle>\r\n              </Overlay>\r\n              <Image\r\n                src={\r\n                  poster_path\r\n                    ? `https://image.tmdb.org/t/p/w300${poster_path}`\r\n                    : `${noImageFound}`\r\n                }\r\n                alt={title}\r\n              />\r\n\r\n              <MovieTitleOverlay>\r\n                <MovieTitle>{title}</MovieTitle>\r\n              </MovieTitleOverlay>\r\n            </Link>\r\n          </Slide>\r\n        </SwiperSlide>\r\n      ))}\r\n    </Swiper>\r\n  );\r\n}\r\n\r\nSwiper.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      poster_path: PropTypes.string,\r\n      title: PropTypes.string,\r\n      vote_average: PropTypes.number,\r\n    })\r\n  ),\r\n};\r\n","import { useQueries } from \"@tanstack/react-query\";\r\nimport { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport {\r\n  getMovieById,\r\n  getPopularMovies,\r\n  getTopRatedMovies,\r\n  getUpcomingMovies,\r\n} from \"../../services/api/movies-api\";\r\nimport MainMovie from \"../../components/MainMovie\";\r\nimport Section from \"../../components/Section\";\r\nimport Upcoming from \"../../components/Upcoming\";\r\nimport NowPlaying from \"../../components/NowPlaying\";\r\nimport SwiperCarousel from \"../../components/Swiper/Swiper\";\r\n\r\nexport default function HomePage() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n    }, 0);\r\n  }, [pathname]);\r\n\r\n  const [movieQuery, popularQuery, topRatedQuery, upcomingQuery] = useQueries({\r\n    queries: [\r\n      {\r\n        queryKey: [\"mainMovie\"],\r\n        queryFn: () => getMovieById(315162),\r\n      },\r\n      {\r\n        queryKey: [\"popularMovies\"],\r\n        queryFn: getPopularMovies,\r\n      },\r\n\r\n      {\r\n        queryKey: [\"topRatedMovies\"],\r\n        queryFn: getTopRatedMovies,\r\n      },\r\n      { queryKey: [\"upcomingMovies\"], queryFn: getUpcomingMovies },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <>\r\n      {popularQuery.isSuccess && (\r\n        <>\r\n          <MainMovie movie={movieQuery.data} />\r\n          <Section title=\"Popular\" linkTo=\"/popular\">\r\n            <SwiperCarousel movies={popularQuery.data.results} />\r\n          </Section>\r\n        </>\r\n      )}\r\n\r\n      {topRatedQuery.isSuccess && (\r\n        <Section title=\"Top Rated\" linkTo=\"/top_rated\">\r\n          <SwiperCarousel movies={topRatedQuery.data.results} />\r\n        </Section>\r\n      )}\r\n      {upcomingQuery.isSuccess && (\r\n        <Section title=\"Top 10 Upcoming Movies\" linkTo=\"/upcoming\">\r\n          <Upcoming movies={upcomingQuery.data.results} />\r\n        </Section>\r\n      )}\r\n      {popularQuery.isSuccess && (\r\n        <NowPlaying movie={popularQuery.data.results[8]} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react'\nimport { useSyncExternalStore } from './useSyncExternalStore'\n\nimport type { QueryKey, QueryObserver } from '@tanstack/query-core'\nimport { notifyManager } from '@tanstack/query-core'\nimport { useQueryErrorResetBoundary } from './QueryErrorResetBoundary'\nimport { useQueryClient } from './QueryClientProvider'\nimport type { UseBaseQueryOptions } from './types'\nimport { useIsRestoring } from './isRestoring'\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary,\n} from './errorBoundaryUtils'\nimport { ensureStaleTime, shouldSuspend, fetchOptimistic } from './suspense'\n\nexport function useBaseQuery<\n  TQueryFnData,\n  TError,\n  TData,\n  TQueryData,\n  TQueryKey extends QueryKey,\n>(\n  options: UseBaseQueryOptions<\n    TQueryFnData,\n    TError,\n    TData,\n    TQueryData,\n    TQueryKey\n  >,\n  Observer: typeof QueryObserver,\n) {\n  const queryClient = useQueryClient({ context: options.context })\n  const isRestoring = useIsRestoring()\n  const errorResetBoundary = useQueryErrorResetBoundary()\n  const defaultedOptions = queryClient.defaultQueryOptions(options)\n\n  // Make sure results are optimistically set in fetching state before subscribing or updating options\n  defaultedOptions._optimisticResults = isRestoring\n    ? 'isRestoring'\n    : 'optimistic'\n\n  // Include callbacks in batch renders\n  if (defaultedOptions.onError) {\n    defaultedOptions.onError = notifyManager.batchCalls(\n      defaultedOptions.onError,\n    )\n  }\n\n  if (defaultedOptions.onSuccess) {\n    defaultedOptions.onSuccess = notifyManager.batchCalls(\n      defaultedOptions.onSuccess,\n    )\n  }\n\n  if (defaultedOptions.onSettled) {\n    defaultedOptions.onSettled = notifyManager.batchCalls(\n      defaultedOptions.onSettled,\n    )\n  }\n\n  ensureStaleTime(defaultedOptions)\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary)\n\n  useClearResetErrorBoundary(errorResetBoundary)\n\n  const [observer] = React.useState(\n    () =>\n      new Observer<TQueryFnData, TError, TData, TQueryData, TQueryKey>(\n        queryClient,\n        defaultedOptions,\n      ),\n  )\n\n  const result = observer.getOptimisticResult(defaultedOptions)\n\n  useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) =>\n        isRestoring\n          ? () => undefined\n          : observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer, isRestoring],\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult(),\n  )\n\n  React.useEffect(() => {\n    // Do not notify on updates because of changes in the options because\n    // these changes should already be reflected in the optimistic result.\n    observer.setOptions(defaultedOptions, { listeners: false })\n  }, [defaultedOptions, observer])\n\n  // Handle suspense\n  if (shouldSuspend(defaultedOptions, result, isRestoring)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n  }\n\n  // Handle error boundary\n  if (\n    getHasError({\n      result,\n      errorResetBoundary,\n      useErrorBoundary: defaultedOptions.useErrorBoundary,\n      query: observer.getCurrentQuery(),\n    })\n  ) {\n    throw result.error\n  }\n\n  // Handle result property usage tracking\n  return !defaultedOptions.notifyOnChangeProps\n    ? observer.trackResult(result)\n    : result\n}\n"],"names":["MainContainer","styled","Container","children","getPopularMovies","page","config","url","params","axios","data","getTopRatedMovies","console","log","error","getUpcomingMovies","getMoviesByQuery","query","getMovieById","id","getCastInfo","cast","getMovieVideo","results","getMovieImages","backdrops","api_key","language","include_image_language","getColor","vote","num","toFixed","createSvgIcon","_jsx","d","MainWrapper","props","backdrop","Wrapper","LogoWrapper","theme","space","colors","red","LogoLink","fontWeights","bold","fontSizes","s","lineHeights","heading","m","MovieWrapper","InfoWrapper","MainTitle","l","lxl","xxl","Info","Options","OptionsItem","fonts","numbers","Rating","Imdb","Overview","OverviewBox","Box","marginBottom","spacing","backgroundColor","color","palette","common","white","paddingLeft","secondary","main","Block","Subtitle","ms","CastList","CastListItem","CastError","LinkWrapper","WatchLink","Link","hover","MobileWatchLink","MainMovie","movie","backdrop_path","title","release_date","vote_average","overview","tagline","imdb_id","useLocation","arg1","arg2","arg3","parsedOptions","parseQueryArgs","useBaseQuery","QueryObserver","useQuery","queryKey","queryFn","isSuccess","href","split","slice","join","target","to","pathname","PlayCircleOutlined","Accordion","AccordionSummary","expandIcon","ExpandMore","AccordionDetails","map","actor","original_name","PlayCircleFilledOutlined","SectionWrapper","Nav","Title","NavLink","Section","linkTo","MovieList","MovieListItem","MovieTitle","xs","Upcoming","movies","src","noImage","alt","black","ml","MovieInfo","Option","LinkWatch","animation","PosterWrapper","NowPlaying","poster_path","adult","noImageFound","width","Overlay","MovieTitleOverlay","Slide","OverlayVote","Image","OverlayTitle","SwiperCarousel","style","slidesPerView","spaceBetween","loop","breakpoints","autoplay","delay","disableOnInteraction","navigation","modules","Autoplay","Navigation","HomePage","useEffect","setTimeout","window","scrollTo","top","behavior","useQueries","queries","movieQuery","popularQuery","topRatedQuery","upcomingQuery","Swiper","PropTypes","options","Observer","queryClient","useQueryClient","context","isRestoring","useIsRestoring","errorResetBoundary","useQueryErrorResetBoundary","defaultedOptions","defaultQueryOptions","_optimisticResults","onError","notifyManager","onSuccess","onSettled","ensureStaleTime","ensurePreventErrorBoundaryRetry","useClearResetErrorBoundary","React","observer","result","getOptimisticResult","useSyncExternalStore","onStoreChange","subscribe","getCurrentResult","setOptions","listeners","shouldSuspend","fetchOptimistic","getHasError","useErrorBoundary","getCurrentQuery","notifyOnChangeProps","trackResult"],"sourceRoot":""}