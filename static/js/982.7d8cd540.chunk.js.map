{"version":3,"file":"static/js/982.7d8cd540.chunk.js","mappings":"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","sources":["components/AlertMessage/AlertMessage.styled.jsx","components/AlertMessage/AlertMessage.jsx","components/Buttons/ButtonUp.styled.jsx","components/Buttons/ButtonUp.jsx","components/Container/Container.styled.jsx","components/Container/Container.jsx","components/DataGridItem/DataGridItem.styled.jsx","components/DataGridItem/DataGridItem.jsx","components/DataGrid/DataGrid.styled.jsx","components/DataGrid/DataGrid.jsx","components/PageTitle/PageTitle.styled.jsx","components/PageTitle/PageTitle.jsx","components/PaginationNotification/PaginationNotification.styled.jsx","components/PaginationNotification/PaginationNotification.jsx","hooks/useInfiniteQueries.jsx","services/api/movies-api.js","services/getColor.js","views/TopRatedView/TopRatedView.jsx"],"sourcesContent":["import { Box, styled } from \"@mui/material\";\r\n\r\nexport const AlertWrapper = styled(Box)(({ theme }) => ({\r\n  marginTop: theme.spacing(5),\r\n  width: 1,\r\n  height: \"50vh\",\r\n  \"& .MuiAlert-root\": {\r\n    alignItems: \"center\",\r\n  },\r\n  [theme.breakpoints.up(\"lg\")]: {\r\n    width: 350,\r\n  },\r\n}));\r\n","import { Alert } from \"@mui/material\";\r\nimport Container from \"../Container\";\r\nimport { AlertWrapper } from \"./AlertMessage.styled\";\r\n\r\nexport default function AlertMessage({ message }) {\r\n  return (\r\n    <Container>\r\n      <AlertWrapper>\r\n        <Alert variant=\"filled\" severity=\"info\" color=\"error\">\r\n          <b>{message}</b>\r\n        </Alert>\r\n      </AlertWrapper>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const ButtonToTop = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  position: fixed;\r\n  z-index: 999;\r\n  bottom: 30px;\r\n  right: 20px;\r\n  border-radius: 50%;\r\n  padding: 16px;\r\n  min-width: 0;\r\n  cursor: pointer;\r\n  color: ${(props) => props.theme.colors.white};\r\n  background-color: ${(props) => props.theme.colors.red};\r\n\r\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\r\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { Zoom } from \"@mui/material\";\r\nimport UpIcon from \"@mui/icons-material/KeyboardArrowUp\";\r\nimport { ButtonToTop } from \"./ButtonUp.styled\";\r\n\r\nexport default function ButtonUp() {\r\n  const [show, setShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleScrollButtonVisibility = () => {\r\n      window.pageYOffset > 800 ? setShow(true) : setShow(false);\r\n    };\r\n    window.addEventListener(\"scroll\", handleScrollButtonVisibility);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScrollButtonVisibility);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {show && (\r\n        <Zoom in={show}>\r\n          <ButtonToTop\r\n            onClick={() => {\r\n              window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\r\n            }}\r\n          >\r\n            <UpIcon color=\"inherit\" />\r\n          </ButtonToTop>\r\n        </Zoom>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MainContainer = styled.div`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 0px 15px;\r\n\r\n  @media (min-width: 375px) {\r\n    width: 375px;\r\n    padding: 0px 15px;\r\n  }\r\n\r\n  @media (min-width: 768px) {\r\n    width: 768px;\r\n    padding: 0px 30px;\r\n  }\r\n  @media (min-width: 1280px) {\r\n    width: 1280px;\r\n    padding: 0px 15px;\r\n  }\r\n`;\r\n","import { MainContainer } from \"./Container.styled\";\r\n\r\nexport default function Container({ children }) {\r\n  return <MainContainer>{children}</MainContainer>;\r\n}\r\n","import styled from \"@emotion/styled\";\r\nimport getColor from \"../../services/getColor\";\r\n\r\nexport const MoviesListItem = styled.li`\r\n  position: relative;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  box-shadow: rgba(0, 0, 0, 0.4) 0px 2px 4px,\r\n    rgba(0, 0, 0, 0.3) 0px 7px 13px -3px, rgba(0, 0, 0, 0.2) 0px -3px 0px inset;\r\n  transition: all 250ms ease-in;\r\n  img {\r\n    object-fit: cover;\r\n    object-position: top;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n\r\n  &:hover {\r\n    transform: translateY(-8px);\r\n  }\r\n  &:hover .movieCard,\r\n  &:focus .movieCard {\r\n    opacity: 0;\r\n  }\r\n  &:hover .overlay,\r\n  &:focus .overlay {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: absolute;\r\n  z-index: 33;\r\n  width: 100%;\r\n  height: 100%;\r\n  opacity: 0;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  transition: opacity 250ms ease-in;\r\n  &::before {\r\n    position: absolute;\r\n    left: 0;\r\n    display: inline-block;\r\n    content: \" \";\r\n    width: 4px;\r\n    height: 100%;\r\n    background-color: ${(props) => props.theme.colors.red};\r\n  }\r\n`;\r\n\r\nexport const OverlayTitle = styled.p`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\nexport const OverlayVote = styled.div`\r\n  position: absolute;\r\n  z-index: 33;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 5px;\r\n  width: 30px;\r\n  height: 30px;\r\n  right: 10px;\r\n  top: 10px;\r\n\r\n  background-color: rgba(49, 50, 60, 0.412);\r\n`;\r\n\r\nexport const Rating = styled.p`\r\n  font-family: ${(props) => props.theme.fonts.numbers};\r\n  font-size: ${(props) => props.theme.fontSizes.s};\r\n  color: ${(props) => getColor(props.vote)};\r\n`;\r\n\r\nexport const MovieCard = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  min-height: 60px;\r\n  bottom: 0;\r\n  padding: ${(props) => props.theme.space[1]}px;\r\n\r\n  background-color: rgba(49, 50, 60, 0.647);\r\n  cursor: pointer;\r\n  transition: opacity 250ms ease-in;\r\n`;\r\n\r\nexport const MovieTitle = styled.p`\r\n  color: ${(props) => props.theme.colors.mainText};\r\n  text-shadow: 0 3px 7px rgba(0, 0, 0, 0.3);\r\n`;\r\n","import { Link, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport noImageFound from \"../../styles/images/noimage.jpg\";\r\n\r\nimport {\r\n  MovieCard,\r\n  MoviesListItem,\r\n  MovieTitle,\r\n  Overlay,\r\n  OverlayTitle,\r\n  OverlayVote,\r\n  Rating,\r\n} from \"./DataGridItem.styled\";\r\n\r\nexport default function DataGridItem({ movie }) {\r\n  const url = useLocation();\r\n\r\n  return (\r\n    <MoviesListItem>\r\n      <Link to={`${url.pathname}/${movie.id}`}>\r\n        <Overlay>\r\n          <OverlayTitle>{movie.title}</OverlayTitle>\r\n        </Overlay>\r\n        <OverlayVote>\r\n          {movie.vote_average && (\r\n            <Rating vote={movie.vote_average}>\r\n              {movie.vote_average.toFixed()}\r\n            </Rating>\r\n          )}\r\n        </OverlayVote>\r\n\r\n        <img\r\n          src={\r\n            movie.poster_path\r\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\r\n              : `${noImageFound}`\r\n          }\r\n          alt={movie.title}\r\n        />\r\n\r\n        <MovieCard>\r\n          <MovieTitle>{movie.title}</MovieTitle>\r\n        </MovieCard>\r\n      </Link>\r\n    </MoviesListItem>\r\n  );\r\n}\r\n\r\nDataGridItem.propTypes = {\r\n  movie: PropTypes.shape({\r\n    id: PropTypes.number,\r\n    poster_path: PropTypes.string,\r\n    title: PropTypes.string,\r\n    vote_average: PropTypes.number,\r\n  }),\r\n};\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const MoviesList = styled.ul`\r\n  margin-top: ${(props) => props.theme.space[6]}px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\r\n  gap: 15px;\r\n\r\n  @media (min-width: 768px) and (max-width: 1279px) {\r\n    grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\r\n  }\r\n`;\r\n","import { MoviesList } from \"./DataGrid.styled\";\r\n\r\nexport default function DataGrid({ children }) {\r\n  return <MoviesList>{children}</MoviesList>;\r\n}\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const TitleWrapper = styled.div`\r\n  margin-top: 80px;\r\n  @media (min-width: 1280px) {\r\n    margin-top: 110px;\r\n  }\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  font-weight: ${(props) => props.theme.fontWeights.bold};\r\n  font-size: ${(props) => props.theme.fontSizes.m};\r\n  line-height: ${(props) => props.theme.lineHeights.heading};\r\n  text-shadow: 2px 7px 5px rgba(0, 0, 0, 0.3),\r\n    0px -4px 10px rgba(255, 255, 255, 0.3);\r\n\r\n  @media (min-width: 1280px) {\r\n    font-size: ${(props) => props.theme.fontSizes.ml};\r\n  }\r\n`;\r\n","import PropTypes from \"prop-types\";\r\n\r\nimport { Title, TitleWrapper } from \"./PageTitle.styled\";\r\n\r\nexport default function PageTitle({ title }) {\r\n  return (\r\n    <TitleWrapper>\r\n      <Title>{title}</Title>\r\n    </TitleWrapper>\r\n  );\r\n}\r\n\r\nPageTitle.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import { Box, styled } from \"@mui/material\";\r\n\r\nexport const NotificationWrapper = styled(Box)(({ theme }) => ({\r\n  marginTop: theme.spacing(5),\r\n  marginBottom: theme.spacing(5),\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n}));\r\n","import { Typography, CircularProgress } from \"@mui/material\";\r\nimport { NotificationWrapper } from \"./PaginationNotification.styled\";\r\n\r\nexport default function PaginationNotification({\r\n  isFetchingNextPage,\r\n  hasNextPage,\r\n}) {\r\n  return (\r\n    <NotificationWrapper>\r\n      {isFetchingNextPage && <CircularProgress color=\"secondary\" />}\r\n\r\n      {!hasNextPage && (\r\n        <Typography>You have viewed all available movies</Typography>\r\n      )}\r\n    </NotificationWrapper>\r\n  );\r\n}\r\n","import { useInfiniteQuery } from \"@tanstack/react-query\";\r\nimport {\r\n  getPopularMovies,\r\n  getMoviesByQuery,\r\n  getTopRatedMovies,\r\n  getUpcomingMovies,\r\n} from \"../services/api/movies-api\";\r\n\r\nfunction usePopularQuery() {\r\n  return useInfiniteQuery(\r\n    [\"popular\"],\r\n    ({ pageParam = 1 }) => getPopularMovies(pageParam),\r\n    {\r\n      getNextPageParam: (lastPage, allPages) => {\r\n        const nextPage = allPages.length + 1;\r\n        return lastPage.results.length !== 0 ? nextPage : undefined;\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\nfunction useTopRatedQuery() {\r\n  return useInfiniteQuery(\r\n    [\"topRated\"],\r\n    ({ pageParam = 1 }) => getTopRatedMovies(pageParam),\r\n    {\r\n      getNextPageParam: (lastPage, allPages) => {\r\n        const nextPage = allPages.length + 1;\r\n        return lastPage.results.length !== 0 ? nextPage : undefined;\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\nfunction useUpcomingQuery() {\r\n  return useInfiniteQuery(\r\n    [\"topRated\"],\r\n    ({ pageParam = 1 }) => getUpcomingMovies(pageParam),\r\n    {\r\n      getNextPageParam: (lastPage, allPages) => {\r\n        const nextPage = allPages.length + 1;\r\n        return lastPage.results.length !== 0 ? nextPage : undefined;\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\nfunction useSearchQuery(query) {\r\n  return useInfiniteQuery(\r\n    [\"search\", query],\r\n    ({ pageParam = 1 }) => getMoviesByQuery(query, pageParam),\r\n    {\r\n      getNextPageParam: (lastPage, allPages) => {\r\n        const nextPage = allPages.length + 1;\r\n        return lastPage.results.length !== 0 ? nextPage : undefined;\r\n      },\r\n    }\r\n  );\r\n}\r\n\r\nexport { usePopularQuery, useSearchQuery, useTopRatedQuery, useUpcomingQuery };\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"a7722589dc29fac056c18bf39b029797\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: \"en-US\",\r\n  include_image_language: \"en,null\",\r\n};\r\n\r\n////////////////////////Popular\r\nasync function getPopularMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/popular`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return;\r\n  }\r\n}\r\n\r\n//////////////////// Top_Rated\r\nasync function getTopRatedMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/top_rated`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////// Upcoming\r\nasync function getUpcomingMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/upcoming`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n///////////////////////// SearchQuery\r\nasync function getMoviesByQuery(query, page) {\r\n  try {\r\n    const config = {\r\n      url: `search/movie`,\r\n      params: {\r\n        page,\r\n        query,\r\n      },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////// Single Movie\r\nasync function getMovieById(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n//////////////////////////// Cast\r\nasync function getCastInfo(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/credits`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.cast;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////////////// Trailers\r\nasync function getMovieVideo(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/videos`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n//////////////////////////// Images\r\nasync function getMovieImages(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/images`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.backdrops;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n\r\nexport {\r\n  getPopularMovies,\r\n  getUpcomingMovies,\r\n  getTopRatedMovies,\r\n  getMoviesByQuery,\r\n  getMovieById,\r\n  getCastInfo,\r\n  getMovieImages,\r\n  getMovieVideo,\r\n};\r\n","export default function getColor(vote) {\r\n  const num = vote.toFixed();\r\n  if (num >= 8) {\r\n    return \"#7dd87d\";\r\n  } else if (num < 8 && num >= 5) {\r\n    return \"#eec60a\";\r\n  } else {\r\n    return \"#eb2632\";\r\n  }\r\n}\r\n","import { useEffect } from \"react\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport { useTopRatedQuery } from \"../../hooks/useInfiniteQueries\";\r\n\r\nimport Container from \"../../components/Container\";\r\nimport AlertMessage from \"../../components/AlertMessage\";\r\nimport PageTitle from \"../../components/PageTitle\";\r\nimport DataGrid from \"../../components/DataGrid\";\r\nimport DataGridItem from \"../../components/DataGridItem\";\r\nimport PaginationNotification from \"../../components/PaginationNotification\";\r\nimport ButtonUp from \"../../components/Buttons/ButtonUp\";\r\n\r\nexport default function TopRatedView() {\r\n  const { ref, inView } = useInView();\r\n  const {\r\n    data,\r\n    isSuccess,\r\n    isError,\r\n    hasNextPage,\r\n    fetchNextPage,\r\n    isFetchingNextPage,\r\n  } = useTopRatedQuery();\r\n\r\n  useEffect(() => {\r\n    if (inView) {\r\n      fetchNextPage();\r\n    }\r\n  }, [inView, fetchNextPage]);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <PageTitle title=\"Top Rated movies\" />\r\n        {isError && (\r\n          <AlertMessage message=\"500 Internal Server Error! Try again later.\" />\r\n        )}\r\n        <DataGrid>\r\n          {isSuccess &&\r\n            data.pages.map((page) =>\r\n              page.results.map((result) => (\r\n                <DataGridItem key={result.id} movie={result} />\r\n              ))\r\n            )}\r\n        </DataGrid>\r\n        <div ref={ref}>\r\n          <PaginationNotification\r\n            hasNextPage={hasNextPage}\r\n            isFetchingNextPage={isFetchingNextPage}\r\n          />\r\n        </div>\r\n        <ButtonUp />\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n"],"names":["AlertWrapper","styled","Box","theme","marginTop","spacing","width","height","alignItems","breakpoints","up","AlertMessage","message","Container","Alert","variant","severity","color","ButtonToTop","props","colors","white","red","ButtonUp","useState","show","setShow","useEffect","handleScrollButtonVisibility","window","pageYOffset","addEventListener","removeEventListener","Zoom","Z","in","onClick","scrollTo","top","left","behavior","MainContainer","children","MoviesListItem","Overlay","OverlayTitle","fontWeights","bold","fontSizes","m","OverlayVote","Rating","fonts","numbers","s","getColor","vote","MovieCard","space","MovieTitle","mainText","DataGridItem","movie","url","useLocation","to","pathname","id","title","vote_average","toFixed","src","poster_path","noImageFound","alt","MoviesList","DataGrid","TitleWrapper","Title","lineHeights","heading","ml","PageTitle","NotificationWrapper","marginBottom","display","justifyContent","PaginationNotification","isFetchingNextPage","hasNextPage","CircularProgress","Typography","usePopularQuery","useInfiniteQuery","pageParam","getPopularMovies","getNextPageParam","lastPage","allPages","nextPage","length","results","undefined","useTopRatedQuery","getTopRatedMovies","useUpcomingQuery","getUpcomingMovies","useSearchQuery","query","getMoviesByQuery","page","config","params","axios","data","console","log","error","getMovieById","getCastInfo","cast","getMovieVideo","getMovieImages","backdrops","api_key","language","include_image_language","num","TopRatedView","useInView","ref","inView","isSuccess","isError","fetchNextPage","pages","map","result"],"sourceRoot":""}