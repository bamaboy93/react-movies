{"version":3,"file":"static/js/321.8face145.chunk.js","mappings":"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","sources":["webpack://react-movies/./src/components/Container/Container.module.scss?9ade","components/Container/Container.jsx","services/api/movies-api.js","services/localStorage.js","services/status.js","webpack://react-movies/./src/components/PopUp/PopUp.module.scss?36de","components/PopUp/PopUp.jsx","webpack://react-movies/./src/components/Trailer/Trailer.module.scss?e876","components/VideoError/VideoError.jsx","components/Trailer/Trailer.jsx","webpack://react-movies/./src/components/Cast/Cast.module.scss?0e19","components/Cast/Cast.jsx","webpack://react-movies/./src/views/MovieView/DesktopMovieData/DesktopMovieData.module.scss?6747","views/MovieView/DesktopMovieData/DesktopMovieData.jsx","webpack://react-movies/./src/views/MovieView/MobileMovieData/MobileMovieData.module.scss?f6bd","views/MovieView/MobileMovieData/MobileMovieData.jsx","webpack://react-movies/./src/components/ImagesSwiper/ImagesSwiper.module.scss?e541","components/ImagesSwiper/ImagesSwiper.jsx","views/MovieView/MovieView.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__BWGcJ\"};","import s from \"./Container.module.scss\";\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={s.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"a7722589dc29fac056c18bf39b029797\";\r\nconst BASE_URL = \"https://api.themoviedb.org/3/\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  api_key: API_KEY,\r\n  language: \"en-US\",\r\n  include_image_language: \"en,null\",\r\n};\r\n////////////////////////Popular\r\nasync function getPopularMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/popular`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return;\r\n  }\r\n}\r\n//////////////////// Top_Rated\r\nasync function getTopRatedMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/top_rated`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////// Upcoming\r\nasync function getUpcomingMovies(page) {\r\n  try {\r\n    const config = {\r\n      url: `/movie/upcoming`,\r\n      params: { page },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n///////////////////////// SearchQuery\r\nasync function getMoviesByQuery(query, page) {\r\n  try {\r\n    const config = {\r\n      url: `search/movie`,\r\n      params: {\r\n        query,\r\n        page,\r\n      },\r\n    };\r\n    const { data } = await axios(config);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////// Single Movie\r\nasync function getMovieById(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n//////////////////////////// Cast\r\nasync function getCastInfo(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/credits`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.cast;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n////////////////////////////// Trailers\r\nasync function getMovieVideo(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/videos`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.results;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n//////////////////////////// Images\r\nasync function getMovieImages(id) {\r\n  try {\r\n    const config = {\r\n      url: `movie/${id}/images`,\r\n    };\r\n    const { data } = await axios(config, id);\r\n\r\n    return data.backdrops;\r\n  } catch (error) {\r\n    console.log(\"error\", { error });\r\n    return null;\r\n  }\r\n}\r\n\r\nconst api = {\r\n  getPopularMovies,\r\n  getTopRatedMovies,\r\n  getUpcomingMovies,\r\n  getMoviesByQuery,\r\n  getMovieById,\r\n  getCastInfo,\r\n  getMovieVideo,\r\n  getMovieImages,\r\n};\r\n\r\nexport default api;\r\n","const NAME = \"favourites\";\r\n\r\nexport const getFavourites = () => {\r\n  return JSON.parse(localStorage.getItem(NAME) || \"[]\");\r\n};\r\n\r\nexport const addFavourite = (film) => {\r\n  const fav = getFavourites();\r\n  fav.unshift(film);\r\n  localStorage.setItem(NAME, JSON.stringify(fav));\r\n};\r\n\r\nexport const deleteFavourite = (id) => {\r\n  const fav = getFavourites().filter((i) => i.id !== id);\r\n  localStorage.setItem(NAME, JSON.stringify(fav));\r\n};\r\n\r\nexport const inFavourites = (id) => {\r\n  return !!getFavourites().find((i) => i.id === id);\r\n};\r\n","const Status = {\r\n  IDLE: \"idle\",\r\n  PENDING: \"pending\",\r\n  RESOLVED: \"resolved\",\r\n  REJECTED: \"rejected\",\r\n};\r\n\r\nexport default Status;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"modaloverlay\":\"PopUp_modaloverlay__moAxw\",\"modal\":\"PopUp_modal__EdV28\"};","import { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./PopUp.module.scss\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\nconst PopUp = ({ onClose, children }) => {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n  const handleBackdropClick = (e) => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n  return createPortal(\r\n    <div className={s.modaloverlay} onClick={handleBackdropClick}>\r\n      <div className={s.modal}>{children}</div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n};\r\n\r\nPopUp.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PopUp;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"iframe\":\"Trailer_iframe__dcjgv\"};","import errorImage from \"../../styles/images/YouTube.jpg\";\r\n\r\nexport default function VideoError() {\r\n  return (\r\n    <div>\r\n      <img\r\n        src={errorImage}\r\n        alt=\"nothing-found\"\r\n        style={{ height: 540, width: 960 }}\r\n      ></img>\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport api from \"../../services/api/movies-api\";\r\nimport Status from \"../../services/status\";\r\nimport s from \"./Trailer.module.scss\";\r\n\r\nimport VideoError from \"../VideoError/VideoError\";\r\n\r\nexport default function Trailer() {\r\n  const { movieId } = useParams();\r\n  const [trailer, setTrailer] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getMovieVideo(movieId)\r\n      .then((results) => {\r\n        let total = [];\r\n        for (const res of results) {\r\n          if (res.type === \"Trailer\") {\r\n            total.push(res);\r\n          }\r\n        }\r\n\r\n        setTrailer(total);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [movieId]);\r\n\r\n  return (\r\n    <>\r\n      {status === Status.RESOLVED && (\r\n        <ul>\r\n          {trailer.slice(0, 1).map((tr) => (\r\n            <li key={tr.id}>\r\n              <iframe\r\n                className={s.iframe}\r\n                src={`https://www.youtube.com/embed/${tr.key}`}\r\n                title=\"YouTube video player\"\r\n                frameBorder=\"0\"\r\n                allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                allowFullScreen\r\n              ></iframe>\r\n            </li>\r\n          ))}\r\n          <li>{trailer.length === 0 && <VideoError />}</li>\r\n        </ul>\r\n      )}\r\n\r\n      {status === Status.REJECTED && <p>{error.message}</p>}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Cast_title__FSZf0\",\"block\":\"Cast_block__AvRfa\",\"item\":\"Cast_item__1Wkyx\",\"cast\":\"Cast_cast__yZeik\"};","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport api from \"../../services/api/movies-api\";\r\nimport Status from \"../../services/status\";\r\n\r\nimport s from \"./Cast.module.scss\";\r\n\r\nexport default function Cast() {\r\n  const { movieId } = useParams();\r\n  const [actors, setActors] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getCastInfo(movieId)\r\n      .then((cast) => {\r\n        setActors(cast);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [movieId, error]);\r\n\r\n  return (\r\n    <>\r\n      {status === Status.PENDING}\r\n\r\n      {status === Status.REJECTED}\r\n\r\n      {status === Status.RESOLVED && (\r\n        <div className={s.block}>\r\n          <h3 className={s.title}>Cast</h3>\r\n          <ul className={s.cast}>\r\n            {actors.slice(0, 8).map((actor) => (\r\n              <li key={actor.id} className={s.item}>\r\n                {actor.original_name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"DesktopMovieData_wrapper__8WFEU\",\"posterWrapper\":\"DesktopMovieData_posterWrapper__U5fQ-\",\"image\":\"DesktopMovieData_image__dF3zj\",\"description\":\"DesktopMovieData_description__lvUpe\",\"movieTitle\":\"DesktopMovieData_movieTitle__eEwd-\",\"infoYear\":\"DesktopMovieData_infoYear__+kt9V\",\"infoScore\":\"DesktopMovieData_infoScore__dl-3J\",\"overlayScore\":\"DesktopMovieData_overlayScore__AljKm\",\"info\":\"DesktopMovieData_info__fWvnm\",\"title\":\"DesktopMovieData_title__ZhLgK\",\"item\":\"DesktopMovieData_item__nz7bK\",\"genre\":\"DesktopMovieData_genre__3bnYp\",\"submenu\":\"DesktopMovieData_submenu__dcy5n\",\"submenuItem\":\"DesktopMovieData_submenuItem__d+ix9\",\"activeSubmenuItem\":\"DesktopMovieData_activeSubmenuItem__qGusd\",\"btnBox\":\"DesktopMovieData_btnBox__UqCte\",\"youBtn\":\"DesktopMovieData_youBtn__eg8Ly\",\"favBtn\":\"DesktopMovieData_favBtn__4QevO\"};","import Cast from \"../../../components/Cast\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { MdFavoriteBorder, MdFavorite } from \"react-icons/md\";\r\nimport {\r\n  addFavourite,\r\n  deleteFavourite,\r\n  inFavourites,\r\n} from \"../../../services/localStorage\";\r\nimport s from \"./DesktopMovieData.module.scss\";\r\n\r\nexport default function DesktopMovieData({ movie, onToggle }) {\r\n  const [fav, setFav] = useState(false);\r\n\r\n  const onFavourite = () => {\r\n    if (fav) {\r\n      deleteFavourite(movie.id);\r\n    } else {\r\n      addFavourite(movie);\r\n    }\r\n    setFav(!fav);\r\n  };\r\n  useEffect(() => {\r\n    setFav(inFavourites(movie.id));\r\n  }, [movie.id]);\r\n\r\n  function getColor(vote) {\r\n    const num = vote.toFixed();\r\n    if (num >= 8) {\r\n      return \"#7dd87d\";\r\n    } else if (num < 8 && num >= 5) {\r\n      return \"#eec60a\";\r\n    } else {\r\n      return \"#eb2632\";\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className={s.wrapper}>\r\n        <div className={s.posterWrapper}>\r\n          <img className={s.image} src={movie.src} alt={movie.title} />\r\n          <div className={s.overlayScore}>\r\n            <p style={{ color: getColor(movie.score) }} className={s.infoScore}>\r\n              {movie.score.toFixed()}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className={s.description}>\r\n          <h2 className={s.movieTitle}>{movie.title}</h2>\r\n          <div className={s.btnBox}>\r\n            <button type=\"button\" onClick={onToggle} className={s.youBtn}>\r\n              Trailer\r\n            </button>\r\n            <button type=\"button\" className={s.favBtn} onClick={onFavourite}>\r\n              {fav ? <MdFavorite /> : <MdFavoriteBorder />}\r\n            </button>\r\n          </div>\r\n\r\n          <div className={s.infoWrapper}>\r\n            <h3 className={s.title}>Year</h3>\r\n            <p className={s.infoYear}>\r\n              {movie.year.split(\"\").slice(0, 4).join(\"\")}\r\n            </p>\r\n\r\n            <Cast />\r\n            <h3 className={s.title}>About</h3>\r\n            <p className={s.info}>{movie.overview}</p>\r\n            <h3 className={s.title}>Genres</h3>\r\n            <ul className={s.genre}>\r\n              {movie.genres.map((genre) => (\r\n                <li key={genre.id} className={s.item}>\r\n                  {genre.name}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MobileMovieData_wrapper__gv40O\",\"posterWrapper\":\"MobileMovieData_posterWrapper__6Sw7k\",\"sideWrapper\":\"MobileMovieData_sideWrapper__-ML9w\",\"image\":\"MobileMovieData_image__evaf5\",\"infoWrapper\":\"MobileMovieData_infoWrapper__ZLGTI\",\"description\":\"MobileMovieData_description__9OOJq\",\"movieTitle\":\"MobileMovieData_movieTitle__1FnLF\",\"infoYear\":\"MobileMovieData_infoYear__MpDzK\",\"infoScore\":\"MobileMovieData_infoScore__Ktrn7\",\"overlayScore\":\"MobileMovieData_overlayScore__fBr3s\",\"info\":\"MobileMovieData_info__iOowT\",\"title\":\"MobileMovieData_title__ENaJR\",\"item\":\"MobileMovieData_item__aXl9+\",\"genre\":\"MobileMovieData_genre__OmMVQ\",\"submenu\":\"MobileMovieData_submenu__J9ttm\",\"submenuItem\":\"MobileMovieData_submenuItem__qpXgu\",\"activeSubmenuItem\":\"MobileMovieData_activeSubmenuItem__012XA\",\"btnBox\":\"MobileMovieData_btnBox__UESRD\",\"youBtn\":\"MobileMovieData_youBtn__w+9zY\",\"favBtn\":\"MobileMovieData_favBtn__YqtHE\"};","import { useState, useEffect } from \"react\";\r\nimport {\r\n  addFavourite,\r\n  deleteFavourite,\r\n  inFavourites,\r\n} from \"../../../services/localStorage\";\r\n\r\nimport Cast from \"../../../components/Cast\";\r\nimport { MdFavoriteBorder, MdFavorite } from \"react-icons/md\";\r\n\r\nimport s from \"./MobileMovieData.module.scss\";\r\n\r\nexport default function DesktopMovieData({ movie, onClick }) {\r\n  const [fav, setFav] = useState(false);\r\n\r\n  const onFavourite = () => {\r\n    if (fav) {\r\n      deleteFavourite(movie.id);\r\n    } else {\r\n      addFavourite(movie);\r\n    }\r\n    setFav(!fav);\r\n  };\r\n  useEffect(() => {\r\n    setFav(inFavourites(movie.id));\r\n  }, [movie.id]);\r\n\r\n  function getColor(vote) {\r\n    const num = vote.toFixed();\r\n    if (num >= 8) {\r\n      return \"#7dd87d\";\r\n    } else if (num < 8 && num >= 5) {\r\n      return \"#eec60a\";\r\n    } else {\r\n      return \"#eb2632\";\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <div className={s.wrapper}>\r\n        <div className={s.posterWrapper}>\r\n          <img className={s.image} src={movie.src} alt={movie.title} />\r\n          <div className={s.overlayScore}>\r\n            <p style={{ color: getColor(movie.score) }} className={s.infoScore}>\r\n              {movie.score.toFixed()}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div className={s.sideWrapper}>\r\n          <div className={s.btnBox}>\r\n            <button type=\"button\" onClick={onClick} className={s.youBtn}>\r\n              Trailer\r\n            </button>\r\n            <button type=\"button\" className={s.favBtn} onClick={onFavourite}>\r\n              {fav ? <MdFavorite /> : <MdFavoriteBorder />}\r\n            </button>\r\n          </div>\r\n\r\n          <h3 className={s.title}>Year</h3>\r\n          <p className={s.infoYear}>\r\n            {movie.year.split(\"\").slice(0, 4).join(\"\")}\r\n          </p>\r\n          <h3 className={s.title}>Genres</h3>\r\n          <ul className={s.genre}>\r\n            {movie.genres.map((genre) => (\r\n              <li key={genre.id} className={s.item}>\r\n                {genre.name}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className={s.infoWrapper}>\r\n        <h2 className={s.movieTitle}>{movie.title}</h2>\r\n\r\n        <Cast />\r\n        <h3 className={s.title}>About</h3>\r\n        <p className={s.info}>{movie.overview}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"swiper\":\"ImagesSwiper_swiper__mRuhU\",\"slide\":\"ImagesSwiper_slide__wUEmK\",\"swiper-pagination-bullet-active\":\"ImagesSwiper_swiper-pagination-bullet-active__AZCMs\"};","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { Swiper, SwiperSlide } from \"swiper/react\";\r\nimport { Pagination, Mousewheel, Keyboard } from \"swiper\";\r\n\r\nimport noImageFound from \"../../styles/images/no-image.jpg\";\r\nimport s from \"./ImagesSwiper.module.scss\";\r\n\r\nimport \"swiper/scss\";\r\nimport \"swiper/scss/navigation\";\r\nimport \"swiper/scss/pagination\";\r\n\r\nimport api from \"../../services/api/movies-api\";\r\nimport Status from \"../../services/status\";\r\n\r\nexport default function ImagesSwiper() {\r\n  const { movieId } = useParams();\r\n  const [images, setImages] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n\r\n  useEffect(() => {\r\n    api\r\n      .getMovieImages(movieId)\r\n      .then((backdrops) => {\r\n        setImages(backdrops);\r\n        setStatus(Status.RESOLVED);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [movieId, error]);\r\n\r\n  return (\r\n    <>\r\n      {status === Status.PENDING}\r\n\r\n      {status === Status.REJECTED}\r\n\r\n      {status === Status.RESOLVED && (\r\n        <>\r\n          {images && (\r\n            <Swiper\r\n              spaceBetween={30}\r\n              pagination={{\r\n                clickable: true,\r\n              }}\r\n              mousewheel={true}\r\n              keyboard={true}\r\n              modules={[Pagination, Mousewheel, Keyboard]}\r\n              className={s.swiper}\r\n            >\r\n              {images.slice(0, 8).map(({ vote_average, file_path }) => (\r\n                <SwiperSlide key={file_path} className={s.slide}>\r\n                  <img\r\n                    src={\r\n                      file_path\r\n                        ? `https://image.tmdb.org/t/p/original${file_path}`\r\n                        : `${noImageFound}`\r\n                    }\r\n                    alt=\"movie backdrop\"\r\n                  />\r\n                </SwiperSlide>\r\n              ))}\r\n            </Swiper>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nimport Status from \"../../services/status\";\r\nimport api from \"../../services/api/movies-api\";\r\n\r\nimport noImageFound from \"../../styles/images/noimage.jpg\";\r\n\r\nimport Container from \"../../components/Container\";\r\nimport PopUp from \"../../components/PopUp\";\r\nimport Trailer from \"../../components/Trailer\";\r\nimport DesktopMovieData from \"./DesktopMovieData\";\r\nimport MobileMovieData from \"./MobileMovieData\";\r\nimport ImagesSwiper from \"../../components/ImagesSwiper\";\r\n\r\nfunction MovieView() {\r\n  const { movieId } = useParams();\r\n  const [movie, setMovie] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [showPopUp, setPopUp] = useState(false);\r\n\r\n  const isMobile = useMediaQuery({\r\n    query: \"(max-width: 767px)\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    setStatus(Status.PENDING);\r\n    api\r\n      .getMovieById(movieId)\r\n      .then(\r\n        ({\r\n          poster_path,\r\n          original_title,\r\n          vote_average,\r\n          overview,\r\n          release_date,\r\n          genres,\r\n          id,\r\n        }) => {\r\n          setMovie({\r\n            id: id,\r\n            src: poster_path\r\n              ? `https://image.tmdb.org/t/p/w500${poster_path}`\r\n              : `${noImageFound}`,\r\n            title: original_title,\r\n            year: release_date,\r\n            score: vote_average,\r\n            overview,\r\n            genres,\r\n          });\r\n\r\n          setStatus(Status.RESOLVED);\r\n        }\r\n      )\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      });\r\n  }, [movieId, error]);\r\n\r\n  const togglePopUp = () => {\r\n    setPopUp(!showPopUp);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {status === Status.PENDING}\r\n\r\n      {status === Status.REJECTED}\r\n\r\n      {status === Status.RESOLVED && (\r\n        <>\r\n          {showPopUp && (\r\n            <PopUp onClose={togglePopUp}>\r\n              <Trailer />\r\n            </PopUp>\r\n          )}\r\n          {isMobile && <MobileMovieData movie={movie} onToggle={togglePopUp} />}\r\n\r\n          {!isMobile && (\r\n            <DesktopMovieData movie={movie} onToggle={togglePopUp} />\r\n          )}\r\n\r\n          <ImagesSwiper />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default MovieView;\r\n"],"names":["children","className","s","page","config","url","params","axios","data","console","log","error","query","id","cast","results","getMovieImages","backdrops","api_key","language","include_image_language","api","getPopularMovies","getTopRatedMovies","getUpcomingMovies","getMoviesByQuery","getMovieById","getCastInfo","getMovieVideo","NAME","getFavourites","JSON","parse","localStorage","getItem","addFavourite","film","fav","unshift","setItem","stringify","deleteFavourite","filter","i","inFavourites","find","IDLE","PENDING","RESOLVED","REJECTED","modalRoot","document","querySelector","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","onClick","currentTarget","target","VideoError","src","errorImage","alt","style","height","width","Trailer","movieId","useParams","useState","trailer","setTrailer","Status","status","setStatus","setError","then","total","res","type","push","catch","slice","map","tr","key","title","frameBorder","allow","allowFullScreen","length","message","Cast","actors","setActors","actor","original_name","DesktopMovieData","movie","onToggle","setFav","color","vote","num","toFixed","getColor","score","year","split","join","overview","genres","genre","name","ImagesSwiper","images","setImages","spaceBetween","pagination","clickable","mousewheel","keyboard","modules","Pagination","Mousewheel","Keyboard","vote_average","file_path","noImageFound","setMovie","showPopUp","setPopUp","isMobile","useMediaQuery","poster_path","original_title","release_date","togglePopUp","Container"],"sourceRoot":""}